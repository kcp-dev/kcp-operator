{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kcp-operator Documentation","text":"<p>Warning</p> <p>While kcp-operator is usable, the project is still in an early state. Please only use it if you know what you are doing. We recommend against using it in production setups right now.</p> <p>kcp-operator is a Kubernetes operator to deploy and run kcp instances on a Kubernetes cluster. kcp is a horizontally scalable control plane for Kubernetes-like APIs.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Create and update core components of a kcp setup (root shard, additional shards, front proxy)</li> <li>Support for multi-shard deployments of kcp</li> <li>Generate and refresh kubeconfigs for accessing kcp instances or specific shards</li> </ul>"},{"location":"#support-matrix","title":"Support Matrix","text":"<p>The table below marks known support of a kcp version in kcp-operator versions.</p> kcp <code>main</code> 0.1.x <code>main</code> 0.28.x 0.27.x <p>Explanation:</p> <ul> <li>: This combination is actively tested in CI and is supported.</li> <li>: While we try to support kcp's <code>main</code> branch, this support is best effort and should not be used for deploying actual kcp instances.</li> <li>: While this could work, it is not actively validated by CI pipelines. Support for it is limited.</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We \u2764\ufe0f our contributors! If you're interested in helping us out, please head over to our Contributing guide.</p>"},{"location":"#getting-in-touch","title":"Getting in touch","text":"<p>There are several ways to communicate with us:</p> <ul> <li>The <code>#kcp-dev</code> channel in the Kubernetes Slack workspace.</li> <li>Our mailing lists:<ul> <li>kcp-dev for development discussions.</li> <li>kcp-users for discussions among users and potential users.</li> </ul> </li> <li>By joining the kcp-dev mailing list, you should receive an invite to our bi-weekly community meetings.</li> <li>See recordings of past community meetings on YouTube.</li> <li>The next community meeting dates are available via our CNCF community group.</li> <li>Check the community meeting notes document for future and past meeting agendas.</li> <li>Browse the shared Google Drive to share design docs, notes, etc.<ul> <li>Members of the kcp-dev mailing list can view this drive.</li> </ul> </li> </ul>"},{"location":"architecture/","title":"Architecture","text":"<p>This section describes how the kcp-operator is designed and meant to be used.</p>"},{"location":"architecture/#overview","title":"Overview","text":"<ul> <li>Basics \u2013 A general overview over the resources provided by the kcp-operator.</li> <li>front-proxy \u2013 Explains how the kcp front-proxy can be used to ingest traffic.</li> <li>Certificate Management \u2013 This page describes the various CAs and certificates used in a kcp installation.</li> </ul>"},{"location":"architecture/basics/","title":"Basics","text":"<p>kcp-operator ships with a number of resources that, together, can be used to create a kcp installation.</p>"},{"location":"architecture/basics/#resource-relationships","title":"Resource Relationships","text":"<pre><code>flowchart TD\n    FrontProxy -- ObjRef (n:1)--&gt; RootShard\n    Shard --ObjRef (n:1)--&gt; RootShard\n    RootShard --ObjRef (1:1, optional)--&gt; CacheServer\n    Shard --ObjRef (n:1, optional)--&gt; CacheServer\n    Kubeconfig --ObjRef (n:1)--&gt;Shard\n    Kubeconfig --ObjRef (n:1)--&gt;RootShard\n    Kubeconfig --ObjRef (n:1)--&gt;FrontProxy</code></pre>"},{"location":"architecture/basics/#rootshard-shard","title":"<code>RootShard</code> &amp; <code>Shard</code>","text":"<p>Each kcp installation consists at the minimum of one root shard and one front-proxy, but you can add additional \"regular\" shards to scale kcp horizontally.</p> <p>Creating a new <code>RootShard</code> object means creating a new kcp installation, as you cannot have more than one root shard in one kcp installation, however multiple installations can run in the same Kubernetes namespace (though this is not necessarily recommended). The <code>RootShard</code> object's name is not really important inside kcp itself.</p> <p>Each additional shard is created by creating a <code>Shard</code> object, which will reference the root shard it belongs to. Shard names are relevant in kcp, as each shard will register itself on its root shard, using the name of the <code>Shard</code> object.</p>"},{"location":"architecture/basics/#frontproxy","title":"<code>FrontProxy</code>","text":"<p>The kcp front-proxy can be used to provide access to either a whole or a subset of a kcp installation. Its main purpose is to act as a gateway, since it builds up a runtime map of all existing workspaces across all shards that it targets, so it knows where to route a request to <code>/clusters/root:my-team</code> to the shard where the logicalcluster for that workspace resides.</p> <p>A kcp installation can contain multiple front-proxies with different settings; one might perform additional authentication while another might pass unauthenticated requests to the shards (which will then perform their own authentication).</p> <p>For developing controllers against kcp, it is often necessary to access the shards directly, so front-proxies are not the only way to access kcp.</p>"},{"location":"architecture/basics/#kubeconfig","title":"<code>Kubeconfig</code>","text":"<p>Kubeconfigs allow the easy creation of credentials to access kcp. As a sharded system, kcp relies on client certificate authentication and the kcp-operator will ensure the correct certificates are generated and then neatly wrapped up in ready-to-use kubeconfig Secrets.</p> <p>Kubeconfigs can be configured to point to a specific shard or to a front-proxy instance, which affects which client CA is used to generate the certificates.</p>"},{"location":"architecture/basics/#cross-namespacecluster-references","title":"Cross-Namespace/Cluster References","text":"<p>Due to the potential \"global\" nature of a kcp setup it might be necessary to run kcp-operator on multiple clusters while attempting to form one single kcp setup with multiple shards and front proxies.</p> <p>To make this possible, resources with object references (see above) could have a secondary way of reading necessary configuration (instead of a <code>corev1.LocalObjectReference</code>). This could be a reference to a <code>ConfigMap</code> or a <code>Secret</code> (to be determined) which are automatically generated for various resource types. A sync process (outside of the kcp-operator) could then sync the <code>ConfigMap</code> (or the <code>Secret</code>, or a custom resource type) across namespaces or even clusters, where e.g. a <code>Shard</code> object references a <code>Secret</code> which was generated for a <code>RootShard</code> on another cluster.</p>"},{"location":"architecture/front-proxy/","title":"kcp front-proxy","text":"<p>The kcp front-proxy can be used to provide access to either a whole or a subset of a kcp installation. Its main purpose is to act as a gateway, since it builds up a runtime map of all existing workspaces across all shards that it targets, so it knows where to route a request to <code>/clusters/root:my-team</code> to the shard where the logicalcluster for that workspace resides.</p> <p>Warning</p> <p>Currently it is required to have at least one front-proxy in a kcp installation, which must be reachable at the hostname also configured as the external name for the root shard. Without a front-proxy, new workspaces will not be able to be scheduled.</p> <p>The front-proxy must exist even if there is only one shard (the RootShard). This is a requirement of kcp, not the operator itself.</p>"},{"location":"architecture/front-proxy/#usage","title":"Usage","text":"<p>As mentioned above, your first front-proxy should have the same external hostname as is configured on the root shard. Every additional front-proxy can be served at arbitrary hostnames. Since the CA used to generate the serving certs for front-proxies is embedded in kubeconfigs generated by the kcp-operator, there is no need to use well-known CAs or ACME providers like Let's Encrypt, unless you intend to also access kcp from systems that do not use kubeconfig files and have no way to configure additional CAs.</p>"},{"location":"architecture/front-proxy/#mode-of-operation","title":"Mode of Operation","text":"<p>The kcp front-proxy will build up a runtime map of all shards, workspaces and logicalclusters in a kcp installation. For this it connects dynamically to each shard individually and begins to watch the necessary resources. This runtime index is then used to route incoming requests to their target shards.</p> <p>The proxy can optionally perform authentication, for example using OIDC, and pass authentication information (like username and groups) on to the shard (via HTTP headers). This can be configured for each front-proxy individually. If no authentication is performed, the requests will be passed unauthenticated to their target shards, where then authentication happens.</p>"},{"location":"architecture/front-proxy/#rootshard-proxy","title":"RootShard Proxy","text":"<p>The kcp-operator will deploy an internal front-proxy for every <code>RootShard</code> (i.e. one for each kcp installation). This internal proxy is solely used by the operator itself to allow it to resolve workspace paths to logicalclusters and provision resources inside those workspaces.</p> <p>The reason a standalone proxy is deployed is that the admin-configured front-proxies (based on <code>FrontProxy</code> objects) can be configured to drop sensitive groups, like <code>system:masters</code>, from incoming requests. This is a security measure, ensuring no super admin access is possible to kcp from the outside.</p>"},{"location":"architecture/pki/","title":"Certificate Management","text":""},{"location":"architecture/pki/#kcp-pki","title":"kcp PKI","text":"<p>The placeholders <code>$rootshard</code> and <code>$frontproxy</code> in the chart are used to denote the name of the corresponding operator resource.</p> <pre><code>graph TB\n    A([kcp-pki-bootstrap]):::issuer --&gt; B(kcp-pki-ca):::ca\n    B --&gt; C([$rootshard-ca]):::issuer\n\n    C --&gt; D(kcp-etcd-client-ca):::ca\n    C --&gt; E(kcp-etcd-peer-ca):::ca\n    C --&gt; F($rootshard-front-proxy-client-ca):::ca\n    C --&gt; G($rootshard-server-ca):::ca\n    C --&gt; H($rootshard-requestheaer-client-ca):::ca\n    C --&gt; I($rootshard-client-ca):::ca\n    C --&gt; J(kcp-service-account-ca):::ca\n\n    D --&gt; K([kcp-etcd-client-issuer]):::issuer\n    E --&gt; L([kcp-etcd-peer-issuer]):::issuer\n    F --&gt; M([$rootshard-front-proxy-client-ca]):::issuer\n    G --&gt; N([$rootshard-server-ca]):::issuer\n    H --&gt; O([$rootshard-requestheader-client-ca]):::issuer\n    I --&gt; P([$rootshard-client-ca]):::issuer\n    J --&gt; Q([kcp-service-account-issuer]):::issuer\n\n    K --- K1(kcp-etcd):::cert --&gt; K2(kcp-etcd-client):::cert\n    L --&gt; L1(kcp-etcd-peer):::cert\n    M --&gt; M1($rootshard-$frontproxy-admin-kubeconfig):::cert\n    N --- N1(kcp):::cert --- N2($rootshard-$frontproxy-server):::cert --&gt; N3(kcp-virtual-workspaces):::cert\n    O --- O1($rootshard-$frontproxy-requestheader):::cert --&gt; O2(\"(kcp-front-proxy-vw-client)\"):::cert\n    P --- P1($rootshard-$frontproxy-kubeconfig):::cert --&gt; P2(kcp-internal-admin-kubeconfig):::cert\n    Q --&gt; Q1(kcp-service-account):::cert\n\n    B --&gt; R([$rootshard2-ca]):::issuer\n    R --&gt; S(...):::ca\n\n    classDef issuer color:#77F\n    classDef ca color:#F77\n    classDef cert color:orange</code></pre>"},{"location":"contributing/","title":"Contributing","text":"<p>We are excited to see that you might be interested in contributing to kcp-operator!</p> <p>For general guidance and rules for contributing to a kcp project (which kcp-operator is), please visit the main contributor guide on docs.kcp.io/kcp.</p> <p>All contributions to kcp projects require a Developer Certificate of Origin (DCO). Please check out the Getting Started section that explains how to set it correctly.</p>"},{"location":"contributing/#further-reading","title":"Further Reading","text":""},{"location":"contributing/#local-setup","title":"Local Setup","text":"<p>Step by step guide to get kcp-operator up and running for development purposes in a kind cluster.</p>"},{"location":"contributing/#release-process","title":"Release Process","text":"<p>The release process for cutting new minor and patch releases.</p>"},{"location":"contributing/local-setup/","title":"Local Setup","text":"<p>The files in config/samples showcase kcp-operator resources but have been crafted to get a kind setup up and running quickly.</p> <p>Also check out the Quickstart guide for more information on getting a first kcp setup up and running.</p>"},{"location":"contributing/local-setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>A local copy of the kcp-operator repository</li> <li>kind</li> </ul> <p>To make DNS working from your local machine, it is necessary to create an entry in your <code>/etc/hosts</code> (or corresponding OS mechanism):</p> <pre><code>127.0.0.2 example.operator.kcp.io\n</code></pre>"},{"location":"contributing/local-setup/#prepare-environment","title":"Prepare Environment","text":"<p>First, create a kind cluster if you do not have one yet:</p> <pre><code>kind create cluster\n</code></pre> <p>Install cert-manager, it is required to create kcp's PKI:</p> <pre><code>kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.18.2/cert-manager.yaml\n</code></pre> <p>Set up two etcd instances, one for the root shard and one for a supplementary shard:</p> <pre><code>helm install etcd oci://registry-1.docker.io/bitnamicharts/etcd --set auth.rbac.enabled=false --set auth.rbac.create=false\nhelm install etcd-shard oci://registry-1.docker.io/bitnamicharts/etcd --set auth.rbac.enabled=false --set auth.rbac.create=false\n</code></pre> <p>Create a \"self-signed\" cert-manager issuer:</p> <pre><code>kubectl apply -f config/samples/cert-manager/issuer.yaml\n</code></pre>"},{"location":"contributing/local-setup/#run-operator","title":"Run Operator","text":"<p>Now the operator needs to be started. You can either deploy the operator into the cluster to ensure the built container image behaves as intended (e.g. has the necessary RBAC, etc) or -- for rapid development -- run the operator as a binary.</p>"},{"location":"contributing/local-setup/#option-1-deploy-operator","title":"Option 1: Deploy Operator","text":"<p>Build the image:</p> <pre><code>make docker-build IMG=ghcr.io/kcp-dev/kcp-operator:1\n</code></pre> <p>Load the image into the kind cluster:</p> <pre><code>kind load docker-image ghcr.io/kcp-dev/kcp-operator:1\n</code></pre> <p>Deploy the operator manifests into the cluster:</p> <pre><code>make deploy IMG=ghcr.io/kcp-dev/kcp-operator:1\n</code></pre>"},{"location":"contributing/local-setup/#option-2-run-operator-directly","title":"Option 2: Run Operator Directly","text":"<p>Alternatively, apply the CRDs to the cluster:</p> <pre><code>kubectl apply -k ./config/crd/\n</code></pre> <p>Then start the operator via <code>go run</code>:</p> <pre><code>go run ./cmd/main.go\n</code></pre>"},{"location":"contributing/local-setup/#create-kcp-instance","title":"Create kcp Instance","text":"<p>Now you can create a root shard:</p> <pre><code>kubectl apply -f config/samples/operator.kcp.io_v1alpha1_rootshard.yaml       \n</code></pre> <p>Create the additional shard:</p> <pre><code>kubectl apply -f config/samples/operator.kcp.io_v1alpha1_shard.yaml\n</code></pre> <p>Create the front-proxy instance:</p> <pre><code>kubectl apply -f config/samples/operator.kcp.io_v1alpha1_frontproxy.yaml\n</code></pre> <p>Finally, let's create a kubeconfig that we can use to access the kcp environment via its front-proxy:</p> <pre><code>kubectl apply -f config/samples/operator.kcp.io_v1alpha1_kubeconfig.yaml\n</code></pre>"},{"location":"contributing/local-setup/#connect-to-kcp","title":"Connect to kcp","text":"<p>Once the kubeconfig above has been reconciled, we can use it to connect to kcp.</p> <p>First, fetch the created kubeconfig:</p> <pre><code>kubectl get secret sample-kubeconfig -o jsonpath=\"{.data.kubeconfig}\" | base64 -d &gt; admin.kubeconfig\n</code></pre> <p>Create a port-forwarding in a second terminal:</p> <pre><code>kubectl port-forward svc/frontproxy-sample-front-proxy 6443 --address=127.0.0.2\n</code></pre> <p>Use the new 'admin.kubeconfig` to connect:</p> <pre><code>export KUBECONFIG=$PWD/admin.kubeconfig\nkubectl get ws\n</code></pre>"},{"location":"contributing/releasing/","title":"Release Process","text":"<p>The guide describes how to release a new version of the kcp-operator.</p>"},{"location":"contributing/releasing/#prerequisites","title":"Prerequisites","text":"<ol> <li>Have all desired changes merged and/or cherrypicked into the appropriate    release branch.</li> </ol>"},{"location":"contributing/releasing/#minor-release","title":"Minor Release","text":"<p>Minor releases (0.x) are tagged directly on the <code>main</code> branch and the <code>v0.X.0</code> tag represents where the corresponding <code>release/v0.X</code> branch branches off.</p> <ol> <li>Checkout the desired <code>main</code> branch commit.</li> <li>Tag the main module: <code>git tag -m \"version 0.X\" v0.X.0</code></li> <li>Tag the SDK module: <code>git tag -m \"SDK version 0.X\" sdk/v0.X.0</code></li> <li>Push the tags: <code>git push upstream v0.X.0 sdk/v0.X.0</code></li> <li>Create the release branch: <code>git checkout -B release-0.X</code></li> <li>Push the release branch: <code>git push -u upstream release-0.X</code></li> </ol> <p>Once the tag and branch have been pushed, the documentation has to be manually updated to include the new minor release.</p> <ol> <li>Navigate to https://github.com/kcp-dev/kcp-operator/actions/workflows/docs-gen-and-push.yaml</li> <li>Run the workflow manually on the new release branch.</li> </ol> <p>Within a few minutes of the action finishing, the new branch should show up on https://docs.kcp.io/kcp-operator/.</p>"},{"location":"contributing/releasing/#patch-releases","title":"Patch Releases","text":"<p>Patch releases (v0.x.y) are tagged with in a release branch.</p> <ol> <li>Checkout the desired <code>release/v0.X</code> branch commit.</li> <li>Tag the main module: <code>git tag -m \"version 0.X.Y\" v0.X.Y</code></li> <li>Tag the SDK module: <code>git tag -m \"SDK version 0.X.Y\" sdk/v0.X.Y</code></li> <li>Push the tags: <code>git push upstream v0.X.Y sdk/v0.X.Y</code></li> </ol>"},{"location":"contributing/continuous-integration/","title":"Continuous Integration (CI)","text":"<p>kcp-operator uses a combination of GitHub Actions and and prow to automate the build process.</p> <p>Here are the most important links:</p> <ul> <li>.github/workflows/ defines the Github Actions based jobs.</li> <li>kcp-dev/kcp/.prow.yaml defines the prow based jobs.</li> </ul>"},{"location":"contributing/continuous-integration/#running-e2e-tests-locally","title":"Running E2E tests locally","text":"<p>In order to run the E2E tests locally, you will need to setup cert-manager with the sample clusterissuer:</p> <pre><code>helm upgrade --install --namespace cert-manager --create-namespace --version v1.16.2 --set crds.enabled=true cert-manager jetstack/cert-manager\nkubectl apply -n cert-manager --filename hack/ci/testdata/clusterissuer.yaml\n</code></pre>"},{"location":"reference/","title":"Reference","text":"<p>This chapter provides automatically generated references for the APIs provided by the kcp-operator.</p>"},{"location":"reference/crd/operator.kcp.io/frontproxies/","title":"FrontProxy","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#frontproxy-crd-schema-reference-group-operatorkcpio","title":"FrontProxy CRD schema reference (group operator.kcp.io)","text":"FrontProxy is the Schema for the frontproxies API  Full name: frontproxies.operator.kcp.io Group: operator.kcp.io Singular name: frontproxy Plural name: frontproxies Scope: Namespaced Versions: v1alpha1"},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1","title":"Version v1alpha1","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#crd-example-v1alpha1","title":"Example CR","text":"<pre><code>apiVersion: operator.kcp.io/v1alpha1\nkind: FrontProxy\nmetadata:\n  labels:\n    app.kubernetes.io/name: kcp-operator\n    app.kubernetes.io/managed-by: kustomize\n  name: frontproxy-sample\nspec:\n  auth:\n    serviceAccount:\n      enabled: true\n  rootShard:\n    ref:\n      name: shard-sample\n  serviceTemplate:\n    spec:\n      # hard code a specific cluster IP, e.g. for a kind setup.\n      clusterIP: 10.96.100.100\n  certificateTemplates:\n    server:\n      spec:\n        dnsNames:\n          # add localhost to the certificate.\n          - localhost\n        ipAddresses:\n          # add localhost IPs to the server certificate.\n          # this allows easy port-forward access.\n          - 127.0.0.1\n          - 127.0.0.2\n</code></pre>"},{"location":"reference/crd/operator.kcp.io/frontproxies/#property-details-v1alpha1","title":"Properties","text":"string <p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p> string <p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p> object object <p>FrontProxySpec defines the desired state of FrontProxy.</p> array <p>Optional: AdditionalPathMappings configures // TODO ?</p> object <p>so we have to copy the struct type</p> string Required string Required string Required string Required string Required object <p>Optional: Auth configures various aspects of Authentication and Authorization for this front-proxy instance. If OIDC is enabled, it also requires enabling ServiceAccount authentication (as front-proxy will start validating JWT tokens, which includes ServiceAccount tokens).</p> array <p>Optional: DropGroups configures groups to be dropped before forwarding requests to Shards.</p> string object <p>Optional: OIDC configures OpenID Connect Authentication.</p> object <p>Optionally provides a reference to a secret that contains a CA bundle for the OIDC issuer. This is useful when the OIDC issuer is not publicly trusted.</p> string <p>Key is the key in the secret that contains the CA file. Defaults to \u201cca.crt\u201d.</p> string Required <p>Name is the name of the secret that contains the CA file.</p> string Required <p>ClientID is the OIDC client ID configured on the issuer side for this KCP instance.</p> string <p>Optionally provide the client secret for the OIDC client. This is not used by KCP itself, but is used to generate a OIDC kubeconfig that can be shared with users to log in via the OIDC provider.</p> string <p>Experimental: Optionally provides a custom claim for fetching groups. The claim must be a string or an array of strings.</p> string <p>Optionally sets a custom groups prefix. This defaults to \u201coidc:\u201d if unset, which means a group called \u201cgroup1\u201d on the OIDC side will be recognised as \u201coidc:group1\u201d in KCP.</p> string Required <p>IssuerURL is used for the OIDC issuer URL. Only https URLs will be accepted.</p> string <p>Optionally uses a custom claim for fetching the username. This defaults to \u201csub\u201d if unset.</p> string <p>Optionally sets a custom username prefix. This defaults to \u201coidc:\u201d if unset, which means a user called \u201cuser@example.com\u201d on the OIDC side will be recognised as \u201coidc:user@example.com\u201d in KCP.</p> array <p>Optional: PassOnGroups configures groups to be passed on before forwarding requests to Shards</p> string object <p>Optional: serviceAccountAuthentication configures ServiceAccount Authentication.</p> boolean Required <p>Optional: Enabled enables or disables ServiceAccount Authentication. If set, it will mount every shard\u2019s service account certificate to the front-proxy.</p> object <p>CABundle references a v1.Secret object that contains the CA bundle that should be used to validate the API server\u2019s TLS certificate. The secret must contain a key named <code>tls.crt</code> that holds the PEM encoded CA certificate. It will be merged into the \u201cexternal-logical-cluster-admin-kubeconfig\u201d kubeconfig under the <code>certificate-authority-data</code> field. If not specified, the kubeconfig will use the CA bundle of the root shard or front-proxy referenced in the Target field. It will NOT be used to configure the API server\u2019s own TLS certificate or any other component.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>CertificateTemplates allows to customize the properties on the generated certificates for this front-proxy.</p> object <p>Optional: DeploymentTemplate configures the Kubernetes Deployment created for this shard.</p> object object <p>Annotations is a key value map to be copied to the target Deployment.</p> object <p>Labels is a key value map to be copied to the target Deployment.</p> object object <p>Template describes the pods that will be created.</p> object object <p>Annotations is a key value map to be copied to the Pod.</p> object <p>Labels is a key value map to be copied to the Pod.</p> object object <p>If specified, the pod\u2019s scheduling constraints</p> object <p>Describes node affinity scheduling rules for the pod.</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</p> object <p>An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it\u2019s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).</p> object Required <p>A node selector term, associated with the corresponding weight.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string integer Required <p>Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.</p> object <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</p> array Required <p>Required. A list of node selector terms. The terms are ORed.</p> object <p>A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string object <p>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> object <p>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> array <p>HostAliases is an optional list of hosts and IPs that will be injected into the pod\u2019s hosts file if specified.</p> object <p>HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod\u2019s hosts file.</p> array <p>Hostnames for the above IP address.</p> string string Required <p>IP address of the host file entry.</p> array <p>ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node\u2019s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</p> array <p>If specified, the pod\u2019s tolerations.</p> object <p>The pod this Toleration is attached to tolerates any taint that matches the triple  using the matching operator . string <p>Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.</p> string <p>Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.</p> string <p>Operator represents a key\u2019s relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.</p> integer <p>TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.</p> string <p>Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.</p> object <p>Optional: External configures how this front-proxy should be exposed to the outside world.  If empty, the RootShard\u2019s external hostname will be used only.</p> string Required <p>Hostname is the external name of the kcp instance. This should be matched by a DNS record pointing to the kcp-front-proxy Service\u2019s external IP address.</p> integer Required string <p>Optional: PrivateHostname is an optional hostname that should be used to access internal front-proxy services, e.g. by other kcp components. This is helpful if you don\u2019t want to use the public hostname for internal communication, e.g. You have a DNS configuration, where DNS is re-encrypted for external access, but internal components can access the front-proxy directly. If not set, the value of <code>hostname</code> is used.</p> integer <p>Optional: PrivatePort is an optional port that should be used to access internal front-proxy services, e.g. by other kcp components. This is helpful if you don\u2019t want to use the public port for internal communication, e.g. because it is firewalled. If not set, the value of <code>port</code> is used.</p> string <p>Optional: ExternalHostname under which the FrontProxy can be reached. If empty, the RootShard\u2019s external hostname will be used only. Deprecated: use spec.External for configuration of external access instead.</p> array <p>Optional: ExtraArgs defines additional command line arguments to pass to the front-proxy container.</p> string object <p>Optional: Image defines the image to use. Defaults to the latest versioned image during the release of kcp-operator.</p> array <p>Optional: ImagePullSecrets is a list of secret references that should be used as image pull secrets (e.g. when a private registry is used).</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> string <p>Repository is the container image repository to use for KCP containers. Defaults to <code>ghcr.io/kcp-dev/kcp</code>.</p> string <p>Tag is the container image tag to use for KCP containers. Defaults to the latest kcp release that the operator supports.</p> object <p>Optional: LogLevel configures the logging verbosity for this front-proxy.</p> integer <p>VerbosityLevel sets the verbosity level for the component. Higher values mean more verbose logging. This corresponds to the -v flag in KCP components.</p> integer <p>Optional: Replicas configures the replica count for the front-proxy Deployment.</p> object <p>Resources overrides the default resource requests and limits.</p> array <p>Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.</p> <p>This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.</p> <p>This field is immutable. It can only be set for containers.</p> object <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> string Required <p>Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.</p> string <p>Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.</p> object <p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object <p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object Required <p>RootShard configures the kcp root shard that this front-proxy instance should connect to.</p> object <p>Reference references a local RootShard object.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>Optional: ServiceTemplate configures the Kubernetes Service created for this front-proxy instance.</p> object <p>ServiceMetadataTemplate defines the default labels and annotations to be copied to the Kubernetes Service resource.</p> object <p>Annotations is a key value map to be copied to the target Kubernetes Service.</p> object <p>Labels is a key value map to be copied to the target Kubernetes Service.</p> object string string <p>Service Type string describes ingress methods for a service</p> object <p>FrontProxyStatus defines the observed state of FrontProxy</p> array object <p>Condition contains details for one aspect of the current state of this API Resource.</p> string Required <p>lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.</p> string Required <p>message is a human readable message indicating details about the transition. This may be an empty string.</p> integer <p>observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</p> string Required <p>reason contains a programmatic identifier indicating the reason for the condition\u2019s last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.</p> string Required <p>status of the condition, one of True, False, Unknown.</p> string Required <p>type of condition in CamelCase or in foo.example.com/CamelCase.</p> string"},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.apiVersion","title":".apiVersion","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.kind","title":".kind","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.metadata","title":".metadata","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec","title":".spec","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.additionalPathMappings","title":".spec.additionalPathMappings","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.additionalPathMappings[*]","title":".spec.additionalPathMappings[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.additionalPathMappings[*].backend","title":".spec.additionalPathMappings[*].backend","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.additionalPathMappings[*].backend_server_ca","title":".spec.additionalPathMappings[*].backend_server_ca","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.additionalPathMappings[*].path","title":".spec.additionalPathMappings[*].path","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.additionalPathMappings[*].proxy_client_cert","title":".spec.additionalPathMappings[*].proxy_client_cert","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.additionalPathMappings[*].proxy_client_key","title":".spec.additionalPathMappings[*].proxy_client_key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth","title":".spec.auth","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.dropGroups","title":".spec.auth.dropGroups","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.dropGroups[*]","title":".spec.auth.dropGroups[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc","title":".spec.auth.oidc","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.caFileRef","title":".spec.auth.oidc.caFileRef","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.caFileRef.key","title":".spec.auth.oidc.caFileRef.key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.caFileRef.name","title":".spec.auth.oidc.caFileRef.name","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.clientID","title":".spec.auth.oidc.clientID","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.clientSecret","title":".spec.auth.oidc.clientSecret","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.groupsClaim","title":".spec.auth.oidc.groupsClaim","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.groupsPrefix","title":".spec.auth.oidc.groupsPrefix","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.issuerURL","title":".spec.auth.oidc.issuerURL","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.usernameClaim","title":".spec.auth.oidc.usernameClaim","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.oidc.usernamePrefix","title":".spec.auth.oidc.usernamePrefix","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.passOnGroups","title":".spec.auth.passOnGroups","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.passOnGroups[*]","title":".spec.auth.passOnGroups[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.serviceAccount","title":".spec.auth.serviceAccount","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.auth.serviceAccount.enabled","title":".spec.auth.serviceAccount.enabled","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.caBundleSecretRef","title":".spec.caBundleSecretRef","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.caBundleSecretRef.name","title":".spec.caBundleSecretRef.name","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.certificateTemplates","title":".spec.certificateTemplates","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate","title":".spec.deploymentTemplate","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.metadata","title":".spec.deploymentTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.metadata.annotations","title":".spec.deploymentTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.metadata.labels","title":".spec.deploymentTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec","title":".spec.deploymentTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template","title":".spec.deploymentTemplate.spec.template","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata","title":".spec.deploymentTemplate.spec.template.metadata","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata.annotations","title":".spec.deploymentTemplate.spec.template.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata.labels","title":".spec.deploymentTemplate.spec.template.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec","title":".spec.deploymentTemplate.spec.template.spec","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity","title":".spec.deploymentTemplate.spec.template.spec.affinity","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases","title":".spec.deploymentTemplate.spec.template.spec.hostAliases","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*]","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].ip","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].ip","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.nodeSelector","title":".spec.deploymentTemplate.spec.template.spec.nodeSelector","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations","title":".spec.deploymentTemplate.spec.template.spec.tolerations","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*]","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].effect","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].effect","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].key","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].key","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].operator","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].value","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].value","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.external","title":".spec.external","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.external.hostname","title":".spec.external.hostname","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.external.port","title":".spec.external.port","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.external.privateHostname","title":".spec.external.privateHostname","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.external.privatePort","title":".spec.external.privatePort","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.externalHostname","title":".spec.externalHostname","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.extraArgs","title":".spec.extraArgs","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.extraArgs[*]","title":".spec.extraArgs[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.image","title":".spec.image","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.image.imagePullSecrets","title":".spec.image.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.image.imagePullSecrets[*]","title":".spec.image.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.image.imagePullSecrets[*].name","title":".spec.image.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.image.repository","title":".spec.image.repository","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.image.tag","title":".spec.image.tag","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.logLevel","title":".spec.logLevel","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.logLevel.verbosityLevel","title":".spec.logLevel.verbosityLevel","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.replicas","title":".spec.replicas","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.resources","title":".spec.resources","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.resources.claims","title":".spec.resources.claims","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.resources.claims[*]","title":".spec.resources.claims[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.resources.claims[*].name","title":".spec.resources.claims[*].name","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.resources.claims[*].request","title":".spec.resources.claims[*].request","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.resources.limits","title":".spec.resources.limits","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.resources.requests","title":".spec.resources.requests","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.rootShard","title":".spec.rootShard","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.rootShard.ref","title":".spec.rootShard.ref","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.rootShard.ref.name","title":".spec.rootShard.ref.name","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.serviceTemplate","title":".spec.serviceTemplate","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.serviceTemplate.metadata","title":".spec.serviceTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.serviceTemplate.metadata.annotations","title":".spec.serviceTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.serviceTemplate.metadata.labels","title":".spec.serviceTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.serviceTemplate.spec","title":".spec.serviceTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.serviceTemplate.spec.clusterIP","title":".spec.serviceTemplate.spec.clusterIP","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.spec.serviceTemplate.spec.type","title":".spec.serviceTemplate.spec.type","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status","title":".status","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions","title":".status.conditions","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions[*]","title":".status.conditions[*]","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions[*].lastTransitionTime","title":".status.conditions[*].lastTransitionTime","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions[*].message","title":".status.conditions[*].message","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions[*].observedGeneration","title":".status.conditions[*].observedGeneration","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions[*].reason","title":".status.conditions[*].reason","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions[*].status","title":".status.conditions[*].status","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.conditions[*].type","title":".status.conditions[*].type","text":""},{"location":"reference/crd/operator.kcp.io/frontproxies/#v1alpha1-.status.phase","title":".status.phase","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/","title":"Kubeconfig","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#kubeconfig-crd-schema-reference-group-operatorkcpio","title":"Kubeconfig CRD schema reference (group operator.kcp.io)","text":"Kubeconfig is the Schema for the kubeconfigs API  Full name: kubeconfigs.operator.kcp.io Group: operator.kcp.io Singular name: kubeconfig Plural name: kubeconfigs Scope: Namespaced Versions: v1alpha1"},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1","title":"Version v1alpha1","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#crd-example-v1alpha1","title":"Example CR","text":"<pre><code>apiVersion: operator.kcp.io/v1alpha1\nkind: Kubeconfig\nmetadata:\n  labels:\n    app.kubernetes.io/name: kcp-operator\n    app.kubernetes.io/managed-by: kustomize\n  name: kubeconfig-kcp-admin\nspec:\n  username: kcp-admin\n  groups:\n    - system:kcp:admin\n  validity: 8766h\n  secretRef:\n    name: sample-kubeconfig\n  target:\n    frontProxyRef:\n      name: frontproxy-sample\n</code></pre>"},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#property-details-v1alpha1","title":"Properties","text":"string <p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p> string <p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p> object object <p>KubeconfigSpec defines the desired state of Kubeconfig.</p> object <p>CertificateTemplate allows to customize the properties on the generated certificate for this kubeconfig.</p> object object <p>Annotations is a key value map to be copied to the target Certificate.</p> object <p>Labels is a key value map to be copied to the target Certificate.</p> object array <p>Requested DNS subject alternative names. The values given here will be merged into the DNS names determined automatically by the kcp-operator. If DNSNames is used together with IssuerRef, DNSNames will be uses as-is and not merged. If IssuerRef is not set, DNSNames will be merged with the defaults. This is to avoid trying to guess what DNSNames configued issuer might support.</p> string string <p>Requested \u2018duration\u2019 (i.e. lifetime) of the Certificate. Note that the issuer may choose to ignore the requested duration, just like any other requested attribute.</p> <p>If unset, this defaults to 90 days. Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.</p> array <p>Requested IP address subject alternative names. The values given here will be merged into the DNS names determined automatically by the kcp-operator.</p> string object <p>IssuerRef is a reference to the issuer for this certificate.</p> string <p>Group of the object being referred to.</p> string <p>Kind of the object being referred to.</p> string Required <p>Name of the object being referred to.</p> object <p>Private key options. These include the key algorithm and size, the used encoding and the rotation policy.</p> string <p>Algorithm is the private key algorithm of the corresponding private key for this certificate.</p> <p>If provided, allowed values are either <code>RSA</code>, <code>ECDSA</code> or <code>Ed25519</code>. If <code>algorithm</code> is specified and <code>size</code> is not provided, key size of 2048 will be used for <code>RSA</code> key algorithm and key size of 256 will be used for <code>ECDSA</code> key algorithm. key size is ignored when using the <code>Ed25519</code> key algorithm.</p> string <p>The private key cryptography standards (PKCS) encoding for this certificate\u2019s private key to be encoded in.</p> <p>If provided, allowed values are <code>PKCS1</code> and <code>PKCS8</code> standing for PKCS#1 and PKCS#8, respectively. Defaults to <code>PKCS1</code> if not specified.</p> string <p>RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed.</p> <p>If set to <code>Never</code>, a private key will only be generated if one does not already exist in the target <code>spec.secretName</code>. If one does exist but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to <code>Always</code>, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is <code>Never</code> for backward compatibility.</p> integer <p>Size is the key bit size of the corresponding private key for this certificate.</p> <p>If <code>algorithm</code> is set to <code>RSA</code>, valid values are <code>2048</code>, <code>4096</code> or <code>8192</code>, and will default to <code>2048</code> if not specified. If <code>algorithm</code> is set to <code>ECDSA</code>, valid values are <code>256</code>, <code>384</code> or <code>521</code>, and will default to <code>256</code> if not specified. If <code>algorithm</code> is set to <code>Ed25519</code>, Size is ignored. No other values are allowed.</p> string <p>How long before the currently issued certificate\u2019s expiry cert-manager should renew the certificate. For example, if a certificate is valid for 60 minutes, and <code>renewBefore=10m</code>, cert-manager will begin to attempt to renew the certificate 50 minutes after it was issued (i.e. when there are 10 minutes remaining until the certificate is no longer valid).</p> <p>NOTE: The actual lifetime of the issued certificate is used to determine the renewal time. If an issuer returns a certificate with a different lifetime than the one requested, cert-manager will use the lifetime of the issued certificate.</p> <p>If unset, this defaults to <sup>1</sup>\u2044<sub>3</sub> of the issued certificate\u2019s lifetime. Minimum accepted value is 5 minutes. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration. Cannot be set if the <code>renewBeforePercentage</code> field is set.</p> object <p>Defines annotations and labels to be copied to the Certificate\u2019s Secret. Labels and annotations on the Secret will be changed as they appear on the SecretTemplate when added or removed. SecretTemplate annotations are added in conjunction with, and cannot overwrite, the base set of annotations cert-manager sets on the Certificate\u2019s Secret.</p> object <p>Annotations is a key value map to be copied to the target Kubernetes Secret.</p> object <p>Labels is a key value map to be copied to the target Kubernetes Secret.</p> object <p>Requested set of X509 certificate subject attributes. More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6</p> array <p>Countries to be used on the Certificate.</p> string array <p>Cities to be used on the Certificate.</p> string array <p>Organizational Units to be used on the Certificate.</p> string array <p>Organizations to be used on the Certificate.</p> string array <p>Postal codes to be used on the Certificate.</p> string array <p>State/Provinces to be used on the Certificate.</p> string string <p>Serial number to be used on the Certificate.</p> array <p>Street addresses to be used on the Certificate.</p> string array <p>Username defines the groups embedded in the TLS certificate generated for this kubeconfig.</p> string object Required <p>SecretRef defines the v1.Secret object that the resulting kubeconfig should be written to.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object Required <p>Target configures which kcp-operator object this kubeconfig should be generated for (shard or front-proxy).</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> string Required <p>Username defines the username embedded in the TLS certificate generated for this kubeconfig.</p> string Required <p>Validity configures the lifetime of the embedded TLS certificate. The kubeconfig secret will be automatically regenerated when the certificate expires.</p> object <p>KubeconfigStatus defines the observed state of Kubeconfig</p>"},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.apiVersion","title":".apiVersion","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.kind","title":".kind","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.metadata","title":".metadata","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec","title":".spec","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate","title":".spec.certificateTemplate","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.metadata","title":".spec.certificateTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.metadata.annotations","title":".spec.certificateTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.metadata.labels","title":".spec.certificateTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec","title":".spec.certificateTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.dnsNames","title":".spec.certificateTemplate.spec.dnsNames","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.dnsNames[*]","title":".spec.certificateTemplate.spec.dnsNames[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.duration","title":".spec.certificateTemplate.spec.duration","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.ipAddresses","title":".spec.certificateTemplate.spec.ipAddresses","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.ipAddresses[*]","title":".spec.certificateTemplate.spec.ipAddresses[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.issuerRef","title":".spec.certificateTemplate.spec.issuerRef","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.issuerRef.group","title":".spec.certificateTemplate.spec.issuerRef.group","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.issuerRef.kind","title":".spec.certificateTemplate.spec.issuerRef.kind","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.issuerRef.name","title":".spec.certificateTemplate.spec.issuerRef.name","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.privateKey","title":".spec.certificateTemplate.spec.privateKey","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.privateKey.algorithm","title":".spec.certificateTemplate.spec.privateKey.algorithm","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.privateKey.encoding","title":".spec.certificateTemplate.spec.privateKey.encoding","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.privateKey.rotationPolicy","title":".spec.certificateTemplate.spec.privateKey.rotationPolicy","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.privateKey.size","title":".spec.certificateTemplate.spec.privateKey.size","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.renewBefore","title":".spec.certificateTemplate.spec.renewBefore","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.secretTemplate","title":".spec.certificateTemplate.spec.secretTemplate","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.secretTemplate.annotations","title":".spec.certificateTemplate.spec.secretTemplate.annotations","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.secretTemplate.labels","title":".spec.certificateTemplate.spec.secretTemplate.labels","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject","title":".spec.certificateTemplate.spec.subject","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.countries","title":".spec.certificateTemplate.spec.subject.countries","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.countries[*]","title":".spec.certificateTemplate.spec.subject.countries[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.localities","title":".spec.certificateTemplate.spec.subject.localities","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.localities[*]","title":".spec.certificateTemplate.spec.subject.localities[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.organizationalUnits","title":".spec.certificateTemplate.spec.subject.organizationalUnits","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.organizationalUnits[*]","title":".spec.certificateTemplate.spec.subject.organizationalUnits[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.organizations","title":".spec.certificateTemplate.spec.subject.organizations","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.organizations[*]","title":".spec.certificateTemplate.spec.subject.organizations[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.postalCodes","title":".spec.certificateTemplate.spec.subject.postalCodes","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.postalCodes[*]","title":".spec.certificateTemplate.spec.subject.postalCodes[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.provinces","title":".spec.certificateTemplate.spec.subject.provinces","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.provinces[*]","title":".spec.certificateTemplate.spec.subject.provinces[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.serialNumber","title":".spec.certificateTemplate.spec.subject.serialNumber","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.streetAddresses","title":".spec.certificateTemplate.spec.subject.streetAddresses","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.certificateTemplate.spec.subject.streetAddresses[*]","title":".spec.certificateTemplate.spec.subject.streetAddresses[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.groups","title":".spec.groups","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.groups[*]","title":".spec.groups[*]","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.secretRef","title":".spec.secretRef","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.secretRef.name","title":".spec.secretRef.name","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.target","title":".spec.target","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.target.frontProxyRef","title":".spec.target.frontProxyRef","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.target.frontProxyRef.name","title":".spec.target.frontProxyRef.name","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.target.rootShardRef","title":".spec.target.rootShardRef","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.target.rootShardRef.name","title":".spec.target.rootShardRef.name","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.target.shardRef","title":".spec.target.shardRef","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.target.shardRef.name","title":".spec.target.shardRef.name","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.username","title":".spec.username","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.spec.validity","title":".spec.validity","text":""},{"location":"reference/crd/operator.kcp.io/kubeconfigs/#v1alpha1-.status","title":".status","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/","title":"RootShard","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#rootshard-crd-schema-reference-group-operatorkcpio","title":"RootShard CRD schema reference (group operator.kcp.io)","text":"RootShard is the Schema for the kcpinstances API  Full name: rootshards.operator.kcp.io Group: operator.kcp.io Singular name: rootshard Plural name: rootshards Scope: Namespaced Versions: v1alpha1"},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1","title":"Version v1alpha1","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#crd-example-v1alpha1","title":"Example CR","text":"<pre><code>apiVersion: operator.kcp.io/v1alpha1\nkind: RootShard\nmetadata:\n  labels:\n    app.kubernetes.io/name: kcp-operator\n    app.kubernetes.io/managed-by: kustomize\n  name: shard-sample\nspec:\n  external:\n    hostname: example.operator.kcp.io\n    port: 6443\n  certificates:\n    issuerRef:\n      group: cert-manager.io\n      kind: Issuer\n      name: selfsigned\n  cache:\n    embedded:\n      enabled: true\n  etcd:\n    endpoints:\n      - http://etcd.default.svc.cluster.local:2379\n  deploymentTemplate:\n    spec:\n      template:\n        spec:\n          hostAliases:\n            # add a hardcoded DNS override to the same IP as in v1alpha1_frontproxy.yaml.\n            - ip: \"10.96.100.100\"\n              hostnames:\n                - \"example.operator.kcp.io\"\n</code></pre>"},{"location":"reference/crd/operator.kcp.io/rootshards/#property-details-v1alpha1","title":"Properties","text":"string <p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p> string <p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p> object object <p>RootShardSpec defines the desired state of RootShard.</p> object object integer <p>The size of the buffer to store events before batching and writing. Only used in batch mode.</p> integer <p>The maximum size of a batch. Only used in batch mode.</p> string <p>The amount of time to wait before force writing the batch that hadn\u2019t reached the max size. Only used in batch mode.</p> integer <p>Maximum number of requests sent at the same moment if ThrottleQPS was not utilized before. Only used in batch mode.</p> boolean <p>Whether batching throttling is enabled. Only used in batch mode.</p> string <p>Maximum average number of batches per second. Only used in batch mode. This value is a floating point number, stored as a string (e.g. \u201c3.1\u201d).</p> string <p>Name of a Kubernetes Secret that contains a kubeconfig formatted file that defines the audit webhook configuration.</p> string <p>The amount of time to wait before retrying the first failed request.</p> string <p>Strategy for sending audit events. Blocking indicates sending events should block server responses. Batch causes the backend to buffer and write events asynchronously.</p> boolean <p>Whether event and batch truncating is enabled.</p> integer <p>Maximum size of the batch sent to the underlying backend. Actual serialized size can be several hundreds of bytes greater. If a batch exceeds this limit, it is split into several batches of smaller size.</p> integer <p>Maximum size of the audit event sent to the underlying backend. If the size of an event is greater than this number, first request and response are removed, and if this doesn\u2019t reduce the size enough, event is discarded.</p> string <p>API group and version used for serializing audit events written to webhook.</p> object <p>Optional: Auth configures various aspects of Authentication and Authorization for this shard.</p> array <p>Optional: DropGroups configures groups to be dropped before forwarding requests to Shards.</p> string object <p>Optional: OIDC configures OpenID Connect Authentication.</p> object <p>Optionally provides a reference to a secret that contains a CA bundle for the OIDC issuer. This is useful when the OIDC issuer is not publicly trusted.</p> string <p>Key is the key in the secret that contains the CA file. Defaults to \u201cca.crt\u201d.</p> string Required <p>Name is the name of the secret that contains the CA file.</p> string Required <p>ClientID is the OIDC client ID configured on the issuer side for this KCP instance.</p> string <p>Optionally provide the client secret for the OIDC client. This is not used by KCP itself, but is used to generate a OIDC kubeconfig that can be shared with users to log in via the OIDC provider.</p> string <p>Experimental: Optionally provides a custom claim for fetching groups. The claim must be a string or an array of strings.</p> string <p>Optionally sets a custom groups prefix. This defaults to \u201coidc:\u201d if unset, which means a group called \u201cgroup1\u201d on the OIDC side will be recognised as \u201coidc:group1\u201d in KCP.</p> string Required <p>IssuerURL is used for the OIDC issuer URL. Only https URLs will be accepted.</p> string <p>Optionally uses a custom claim for fetching the username. This defaults to \u201csub\u201d if unset.</p> string <p>Optionally sets a custom username prefix. This defaults to \u201coidc:\u201d if unset, which means a user called \u201cuser@example.com\u201d on the OIDC side will be recognised as \u201coidc:user@example.com\u201d in KCP.</p> array <p>Optional: PassOnGroups configures groups to be passed on before forwarding requests to Shards</p> string object <p>Optional: serviceAccountAuthentication configures ServiceAccount Authentication.</p> boolean Required <p>Optional: Enabled enables or disables ServiceAccount Authentication. If set, it will mount every shard\u2019s service account certificate to the front-proxy.</p> object object array <p>A list of HTTP paths to skip during authorization, i.e. these are authorized without contacting the \u2018core\u2019 kubernetes server. If specified, completely overwrites the default of [/healthz,/readyz,/livez].</p> string string <p>The duration to cache \u2018authorized\u2019 responses from the webhook authorizer.</p> string <p>The duration to cache \u2018unauthorized\u2019 responses from the webhook authorizer.</p> string <p>Name of a Kubernetes Secret that contains a kubeconfig formatted file that defines the authorization webhook configuration.</p> string <p>The API version of the authorization.k8s.io SubjectAccessReview to send to and expect from the webhook.</p> object <p>CABundle references a v1.Secret object that contains the CA bundle that should be used to validate the API server\u2019s TLS certificate. The secret must contain a key named <code>tls.crt</code> that holds the PEM encoded CA certificate. It will be merged into the \u201cexternal-logical-cluster-admin-kubeconfig\u201d kubeconfig under the <code>certificate-authority-data</code> field. If not specified, the kubeconfig will use the CA bundle of the root shard or front-proxy referenced in the Target field. It will NOT be used to configure the API server\u2019s own TLS certificate or any other component.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object Required <p>Cache configures the cache server (with a Kubernetes-like API) used by a sharded kcp instance.</p> object <p>Embedded configures settings for starting the cache server embedded in the root shard.</p> boolean Required <p>Enabled enables or disables running the cache server as embedded.</p> object <p>CertificateTemplates allows to customize the properties on the generated certificates for this shard.</p> object Required <p>Certificates configures how the operator should create the kcp root CA, from which it will then create all other sub CAs and leaf certificates.</p> object <p>CASecretRef can be used as an alternative to the IssuerRef: This field allows to configure a pre-existing CA certificate that should be used as sign kcp certificates. This Secret must contain both the certificate and the private key so that new sub certificates can be signed and created from this CA. This field is mutually exclusive with issuerRef.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>IssuerRef points to a pre-existing cert-manager Issuer or ClusterIssuer that shall be used to acquire new certificates. This field is mutually exclusive with caSecretRef.</p> string <p>Group of the object being referred to.</p> string <p>Kind of the object being referred to.</p> string Required <p>Name of the object being referred to.</p> string <p>ClusterDomain is the DNS domain for services in the cluster. Defaults to \u201ccluster.local\u201d if not set.</p> object <p>Optional: DeploymentTemplate configures the Kubernetes Deployment created for this shard.</p> object object <p>Annotations is a key value map to be copied to the target Deployment.</p> object <p>Labels is a key value map to be copied to the target Deployment.</p> object object <p>Template describes the pods that will be created.</p> object object <p>Annotations is a key value map to be copied to the Pod.</p> object <p>Labels is a key value map to be copied to the Pod.</p> object object <p>If specified, the pod\u2019s scheduling constraints</p> object <p>Describes node affinity scheduling rules for the pod.</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</p> object <p>An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it\u2019s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).</p> object Required <p>A node selector term, associated with the corresponding weight.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string integer Required <p>Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.</p> object <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</p> array Required <p>Required. A list of node selector terms. The terms are ORed.</p> object <p>A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string object <p>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> object <p>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> array <p>HostAliases is an optional list of hosts and IPs that will be injected into the pod\u2019s hosts file if specified.</p> object <p>HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod\u2019s hosts file.</p> array <p>Hostnames for the above IP address.</p> string string Required <p>IP address of the host file entry.</p> array <p>ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node\u2019s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</p> array <p>If specified, the pod\u2019s tolerations.</p> object <p>The pod this Toleration is attached to tolerates any taint that matches the triple  using the matching operator . string <p>Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.</p> string <p>Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.</p> string <p>Operator represents a key\u2019s relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.</p> integer <p>TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.</p> string <p>Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.</p> object Required <p>Etcd configures the etcd cluster that this shard should be using.</p> array Required <p>Endpoints is a list of http urls at which etcd nodes are available. The expected format is \u201chttps://etcd-hostname:2379\u201d.</p> string object <p>ClientCert configures the client certificate used to access etcd.</p> object Required <p>SecretRef is the reference to a v1.Secret object that contains the TLS certificate.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object Required string Required <p>Hostname is the external name of the kcp instance. This should be matched by a DNS record pointing to the kcp-front-proxy Service\u2019s external IP address.</p> integer Required string <p>Optional: PrivateHostname is an optional hostname that should be used to access internal front-proxy services, e.g. by other kcp components. This is helpful if you don\u2019t want to use the public hostname for internal communication, e.g. You have a DNS configuration, where DNS is re-encrypted for external access, but internal components can access the front-proxy directly. If not set, the value of <code>hostname</code> is used.</p> integer <p>Optional: PrivatePort is an optional port that should be used to access internal front-proxy services, e.g. by other kcp components. This is helpful if you don\u2019t want to use the public port for internal communication, e.g. because it is firewalled. If not set, the value of <code>port</code> is used.</p> array <p>Optional: ExtraArgs defines additional command line arguments to pass to the shard container.</p> string object <p>ImageSpec defines settings for using a specific image and overwriting the default images used.</p> array <p>Optional: ImagePullSecrets is a list of secret references that should be used as image pull secrets (e.g. when a private registry is used).</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> string <p>Repository is the container image repository to use for KCP containers. Defaults to <code>ghcr.io/kcp-dev/kcp</code>.</p> string <p>Tag is the container image tag to use for KCP containers. Defaults to the latest kcp release that the operator supports.</p> object <p>Optional: LogLevel configures the logging verbosity for this shard.</p> integer <p>VerbosityLevel sets the verbosity level for the component. Higher values mean more verbose logging. This corresponds to the -v flag in KCP components.</p> object <p>Proxy configures the internal front-proxy that is only (supposed to be) used by the kcp-operator to manage all shards belonging to a root shard instance. No external traffic should ever be routed through this proxy, use a dedicated FrontProxy for that purpose.</p> object <p>CertificateTemplates allows to customize the properties on the generated certificates for this front-proxy.</p> object <p>Optional: DeploymentTemplate configures the Kubernetes Deployment created for this proxy.</p> object object <p>Annotations is a key value map to be copied to the target Deployment.</p> object <p>Labels is a key value map to be copied to the target Deployment.</p> object object <p>Template describes the pods that will be created.</p> object object <p>Annotations is a key value map to be copied to the Pod.</p> object <p>Labels is a key value map to be copied to the Pod.</p> object object <p>If specified, the pod\u2019s scheduling constraints</p> object <p>Describes node affinity scheduling rules for the pod.</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</p> object <p>An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it\u2019s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).</p> object Required <p>A node selector term, associated with the corresponding weight.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string integer Required <p>Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.</p> object <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</p> array Required <p>Required. A list of node selector terms. The terms are ORed.</p> object <p>A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string object <p>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> object <p>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> array <p>HostAliases is an optional list of hosts and IPs that will be injected into the pod\u2019s hosts file if specified.</p> object <p>HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod\u2019s hosts file.</p> array <p>Hostnames for the above IP address.</p> string string Required <p>IP address of the host file entry.</p> array <p>ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node\u2019s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</p> array <p>If specified, the pod\u2019s tolerations.</p> object <p>The pod this Toleration is attached to tolerates any taint that matches the triple  using the matching operator . string <p>Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.</p> string <p>Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.</p> string <p>Operator represents a key\u2019s relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.</p> integer <p>TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.</p> string <p>Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.</p> array <p>Optional: ExtraArgs defines additional command line arguments to pass to the front-proxy container.</p> string object <p>Optional: Image allows to override the container image used for this proxy.</p> array <p>Optional: ImagePullSecrets is a list of secret references that should be used as image pull secrets (e.g. when a private registry is used).</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> string <p>Repository is the container image repository to use for KCP containers. Defaults to <code>ghcr.io/kcp-dev/kcp</code>.</p> string <p>Tag is the container image tag to use for KCP containers. Defaults to the latest kcp release that the operator supports.</p> object <p>Optional: LogLevel configures the logging verbosity for this proxy.</p> integer <p>VerbosityLevel sets the verbosity level for the component. Higher values mean more verbose logging. This corresponds to the -v flag in KCP components.</p> integer <p>Optional: Replicas configures how many instances of this proxy run in parallel. Defaults to 2 if not set.</p> object <p>Optional: Resources overrides the default resource requests and limits.</p> array <p>Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.</p> <p>This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.</p> <p>This field is immutable. It can only be set for containers.</p> object <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> string Required <p>Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.</p> string <p>Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.</p> object <p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object <p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object <p>Optional: ServiceTemplate configures the Kubernetes Service created for this proxy.</p> object <p>ServiceMetadataTemplate defines the default labels and annotations to be copied to the Kubernetes Service resource.</p> object <p>Annotations is a key value map to be copied to the target Kubernetes Service.</p> object <p>Labels is a key value map to be copied to the target Kubernetes Service.</p> object string string <p>Service Type string describes ingress methods for a service</p> integer <p>Replicas configures how many instances of this shard run in parallel. Defaults to 2 if not set.</p> object <p>Resources overrides the default resource requests and limits.</p> array <p>Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.</p> <p>This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.</p> <p>This field is immutable. It can only be set for containers.</p> object <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> string Required <p>Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.</p> string <p>Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.</p> object <p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object <p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object <p>Optional: ServiceTemplate configures the Kubernetes Service created for this shard.</p> object <p>ServiceMetadataTemplate defines the default labels and annotations to be copied to the Kubernetes Service resource.</p> object <p>Annotations is a key value map to be copied to the target Kubernetes Service.</p> object <p>Labels is a key value map to be copied to the target Kubernetes Service.</p> object string string <p>Service Type string describes ingress methods for a service</p> string <p>ShardBaseURL is the base URL under which this shard should be reachable. This is used to configure the external URL. If not provided, the operator will use kubernetes service address to generate it.</p> object <p>RootShardStatus defines the observed state of RootShard</p> array object <p>Condition contains details for one aspect of the current state of this API Resource.</p> string Required <p>lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.</p> string Required <p>message is a human readable message indicating details about the transition. This may be an empty string.</p> integer <p>observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</p> string Required <p>reason contains a programmatic identifier indicating the reason for the condition\u2019s last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.</p> string Required <p>status of the condition, one of True, False, Unknown.</p> string Required <p>type of condition in CamelCase or in foo.example.com/CamelCase.</p> string array <p>Shards is a list of shards that are currently registered with this root shard.</p> object string Required <p>Name is the name of the shard.</p>"},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.apiVersion","title":".apiVersion","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.kind","title":".kind","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.metadata","title":".metadata","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec","title":".spec","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit","title":".spec.audit","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook","title":".spec.audit.webhook","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.batchBufferSize","title":".spec.audit.webhook.batchBufferSize","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.batchMaxSize","title":".spec.audit.webhook.batchMaxSize","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.batchMaxWait","title":".spec.audit.webhook.batchMaxWait","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.batchThrottleBurst","title":".spec.audit.webhook.batchThrottleBurst","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.batchThrottleEnable","title":".spec.audit.webhook.batchThrottleEnable","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.batchThrottleQPS","title":".spec.audit.webhook.batchThrottleQPS","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.configSecretName","title":".spec.audit.webhook.configSecretName","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.initialBackoff","title":".spec.audit.webhook.initialBackoff","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.mode","title":".spec.audit.webhook.mode","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.truncateEnabled","title":".spec.audit.webhook.truncateEnabled","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.truncateMaxBatchSize","title":".spec.audit.webhook.truncateMaxBatchSize","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.truncateMaxEventSize","title":".spec.audit.webhook.truncateMaxEventSize","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.audit.webhook.version","title":".spec.audit.webhook.version","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth","title":".spec.auth","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.dropGroups","title":".spec.auth.dropGroups","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.dropGroups[*]","title":".spec.auth.dropGroups[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc","title":".spec.auth.oidc","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.caFileRef","title":".spec.auth.oidc.caFileRef","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.caFileRef.key","title":".spec.auth.oidc.caFileRef.key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.caFileRef.name","title":".spec.auth.oidc.caFileRef.name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.clientID","title":".spec.auth.oidc.clientID","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.clientSecret","title":".spec.auth.oidc.clientSecret","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.groupsClaim","title":".spec.auth.oidc.groupsClaim","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.groupsPrefix","title":".spec.auth.oidc.groupsPrefix","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.issuerURL","title":".spec.auth.oidc.issuerURL","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.usernameClaim","title":".spec.auth.oidc.usernameClaim","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.oidc.usernamePrefix","title":".spec.auth.oidc.usernamePrefix","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.passOnGroups","title":".spec.auth.passOnGroups","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.passOnGroups[*]","title":".spec.auth.passOnGroups[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.serviceAccount","title":".spec.auth.serviceAccount","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.auth.serviceAccount.enabled","title":".spec.auth.serviceAccount.enabled","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization","title":".spec.authorization","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization.webhook","title":".spec.authorization.webhook","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization.webhook.allowPaths","title":".spec.authorization.webhook.allowPaths","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization.webhook.allowPaths[*]","title":".spec.authorization.webhook.allowPaths[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization.webhook.cacheAuthorizedTTL","title":".spec.authorization.webhook.cacheAuthorizedTTL","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization.webhook.cacheUnauthorizedTTL","title":".spec.authorization.webhook.cacheUnauthorizedTTL","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization.webhook.configSecretName","title":".spec.authorization.webhook.configSecretName","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.authorization.webhook.version","title":".spec.authorization.webhook.version","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.caBundleSecretRef","title":".spec.caBundleSecretRef","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.caBundleSecretRef.name","title":".spec.caBundleSecretRef.name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.cache","title":".spec.cache","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.cache.embedded","title":".spec.cache.embedded","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.cache.embedded.enabled","title":".spec.cache.embedded.enabled","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificateTemplates","title":".spec.certificateTemplates","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificates","title":".spec.certificates","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificates.caSecretRef","title":".spec.certificates.caSecretRef","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificates.caSecretRef.name","title":".spec.certificates.caSecretRef.name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificates.issuerRef","title":".spec.certificates.issuerRef","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificates.issuerRef.group","title":".spec.certificates.issuerRef.group","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificates.issuerRef.kind","title":".spec.certificates.issuerRef.kind","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.certificates.issuerRef.name","title":".spec.certificates.issuerRef.name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.clusterDomain","title":".spec.clusterDomain","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate","title":".spec.deploymentTemplate","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.metadata","title":".spec.deploymentTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.metadata.annotations","title":".spec.deploymentTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.metadata.labels","title":".spec.deploymentTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec","title":".spec.deploymentTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template","title":".spec.deploymentTemplate.spec.template","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata","title":".spec.deploymentTemplate.spec.template.metadata","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata.annotations","title":".spec.deploymentTemplate.spec.template.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata.labels","title":".spec.deploymentTemplate.spec.template.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec","title":".spec.deploymentTemplate.spec.template.spec","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity","title":".spec.deploymentTemplate.spec.template.spec.affinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases","title":".spec.deploymentTemplate.spec.template.spec.hostAliases","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*]","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].ip","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].ip","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.nodeSelector","title":".spec.deploymentTemplate.spec.template.spec.nodeSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations","title":".spec.deploymentTemplate.spec.template.spec.tolerations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*]","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].effect","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].effect","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].key","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].operator","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].value","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].value","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.etcd","title":".spec.etcd","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.etcd.endpoints","title":".spec.etcd.endpoints","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.etcd.endpoints[*]","title":".spec.etcd.endpoints[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.etcd.tlsConfig","title":".spec.etcd.tlsConfig","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.etcd.tlsConfig.secretRef","title":".spec.etcd.tlsConfig.secretRef","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.etcd.tlsConfig.secretRef.name","title":".spec.etcd.tlsConfig.secretRef.name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.external","title":".spec.external","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.external.hostname","title":".spec.external.hostname","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.external.port","title":".spec.external.port","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.external.privateHostname","title":".spec.external.privateHostname","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.external.privatePort","title":".spec.external.privatePort","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.extraArgs","title":".spec.extraArgs","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.extraArgs[*]","title":".spec.extraArgs[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.image","title":".spec.image","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.image.imagePullSecrets","title":".spec.image.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.image.imagePullSecrets[*]","title":".spec.image.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.image.imagePullSecrets[*].name","title":".spec.image.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.image.repository","title":".spec.image.repository","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.image.tag","title":".spec.image.tag","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.logLevel","title":".spec.logLevel","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.logLevel.verbosityLevel","title":".spec.logLevel.verbosityLevel","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy","title":".spec.proxy","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.certificateTemplates","title":".spec.proxy.certificateTemplates","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate","title":".spec.proxy.deploymentTemplate","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.metadata","title":".spec.proxy.deploymentTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.metadata.annotations","title":".spec.proxy.deploymentTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.metadata.labels","title":".spec.proxy.deploymentTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec","title":".spec.proxy.deploymentTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template","title":".spec.proxy.deploymentTemplate.spec.template","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.metadata","title":".spec.proxy.deploymentTemplate.spec.template.metadata","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.metadata.annotations","title":".spec.proxy.deploymentTemplate.spec.template.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.metadata.labels","title":".spec.proxy.deploymentTemplate.spec.template.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec","title":".spec.proxy.deploymentTemplate.spec.template.spec","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.proxy.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.hostAliases","title":".spec.proxy.deploymentTemplate.spec.template.spec.hostAliases","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","title":".spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*].ip","title":".spec.proxy.deploymentTemplate.spec.template.spec.hostAliases[*].ip","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.imagePullSecrets","title":".spec.proxy.deploymentTemplate.spec.template.spec.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","title":".spec.proxy.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.nodeSelector","title":".spec.proxy.deploymentTemplate.spec.template.spec.nodeSelector","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.tolerations","title":".spec.proxy.deploymentTemplate.spec.template.spec.tolerations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*]","title":".spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].effect","title":".spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].effect","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].key","title":".spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].key","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].operator","title":".spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","title":".spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].value","title":".spec.proxy.deploymentTemplate.spec.template.spec.tolerations[*].value","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.extraArgs","title":".spec.proxy.extraArgs","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.extraArgs[*]","title":".spec.proxy.extraArgs[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.image","title":".spec.proxy.image","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.image.imagePullSecrets","title":".spec.proxy.image.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.image.imagePullSecrets[*]","title":".spec.proxy.image.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.image.imagePullSecrets[*].name","title":".spec.proxy.image.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.image.repository","title":".spec.proxy.image.repository","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.image.tag","title":".spec.proxy.image.tag","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.logLevel","title":".spec.proxy.logLevel","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.logLevel.verbosityLevel","title":".spec.proxy.logLevel.verbosityLevel","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.replicas","title":".spec.proxy.replicas","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.resources","title":".spec.proxy.resources","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.resources.claims","title":".spec.proxy.resources.claims","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.resources.claims[*]","title":".spec.proxy.resources.claims[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.resources.claims[*].name","title":".spec.proxy.resources.claims[*].name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.resources.claims[*].request","title":".spec.proxy.resources.claims[*].request","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.resources.limits","title":".spec.proxy.resources.limits","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.resources.requests","title":".spec.proxy.resources.requests","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.serviceTemplate","title":".spec.proxy.serviceTemplate","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.serviceTemplate.metadata","title":".spec.proxy.serviceTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.serviceTemplate.metadata.annotations","title":".spec.proxy.serviceTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.serviceTemplate.metadata.labels","title":".spec.proxy.serviceTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.serviceTemplate.spec","title":".spec.proxy.serviceTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.serviceTemplate.spec.clusterIP","title":".spec.proxy.serviceTemplate.spec.clusterIP","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.proxy.serviceTemplate.spec.type","title":".spec.proxy.serviceTemplate.spec.type","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.replicas","title":".spec.replicas","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.resources","title":".spec.resources","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.resources.claims","title":".spec.resources.claims","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.resources.claims[*]","title":".spec.resources.claims[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.resources.claims[*].name","title":".spec.resources.claims[*].name","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.resources.claims[*].request","title":".spec.resources.claims[*].request","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.resources.limits","title":".spec.resources.limits","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.resources.requests","title":".spec.resources.requests","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.serviceTemplate","title":".spec.serviceTemplate","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.serviceTemplate.metadata","title":".spec.serviceTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.serviceTemplate.metadata.annotations","title":".spec.serviceTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.serviceTemplate.metadata.labels","title":".spec.serviceTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.serviceTemplate.spec","title":".spec.serviceTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.serviceTemplate.spec.clusterIP","title":".spec.serviceTemplate.spec.clusterIP","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.serviceTemplate.spec.type","title":".spec.serviceTemplate.spec.type","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.spec.shardBaseURL","title":".spec.shardBaseURL","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status","title":".status","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions","title":".status.conditions","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions[*]","title":".status.conditions[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions[*].lastTransitionTime","title":".status.conditions[*].lastTransitionTime","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions[*].message","title":".status.conditions[*].message","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions[*].observedGeneration","title":".status.conditions[*].observedGeneration","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions[*].reason","title":".status.conditions[*].reason","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions[*].status","title":".status.conditions[*].status","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.conditions[*].type","title":".status.conditions[*].type","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.phase","title":".status.phase","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.shards","title":".status.shards","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.shards[*]","title":".status.shards[*]","text":""},{"location":"reference/crd/operator.kcp.io/rootshards/#v1alpha1-.status.shards[*].name","title":".status.shards[*].name","text":""},{"location":"reference/crd/operator.kcp.io/shards/","title":"Shard","text":""},{"location":"reference/crd/operator.kcp.io/shards/#shard-crd-schema-reference-group-operatorkcpio","title":"Shard CRD schema reference (group operator.kcp.io)","text":"Shard is the Schema for the shards API  Full name: shards.operator.kcp.io Group: operator.kcp.io Singular name: shard Plural name: shards Scope: Namespaced Versions: v1alpha1"},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1","title":"Version v1alpha1","text":""},{"location":"reference/crd/operator.kcp.io/shards/#crd-example-v1alpha1","title":"Example CR","text":"<pre><code>apiVersion: operator.kcp.io/v1alpha1\nkind: Shard\nmetadata:\n  labels:\n    app.kubernetes.io/name: kcp-operator\n    app.kubernetes.io/managed-by: kustomize\n  name: secondary-shard\nspec:\n  etcd:\n    endpoints:\n      - http://etcd-shard.default.svc.cluster.local:2379\n  rootShard:\n    ref:\n      name: shard-sample\n  logLevel:\n    verbosityLevel: 4\n  deploymentTemplate:\n    spec:\n      template:\n        spec:\n          hostAliases:\n            # add a hardcoded DNS override to the same IP as in v1alpha1_frontproxy.yaml.\n            - ip: \"10.96.100.100\"\n              hostnames:\n                - \"example.operator.kcp.io\"\n</code></pre>"},{"location":"reference/crd/operator.kcp.io/shards/#property-details-v1alpha1","title":"Properties","text":"string <p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p> string <p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p> object object <p>ShardSpec defines the desired state of Shard</p> object object integer <p>The size of the buffer to store events before batching and writing. Only used in batch mode.</p> integer <p>The maximum size of a batch. Only used in batch mode.</p> string <p>The amount of time to wait before force writing the batch that hadn\u2019t reached the max size. Only used in batch mode.</p> integer <p>Maximum number of requests sent at the same moment if ThrottleQPS was not utilized before. Only used in batch mode.</p> boolean <p>Whether batching throttling is enabled. Only used in batch mode.</p> string <p>Maximum average number of batches per second. Only used in batch mode. This value is a floating point number, stored as a string (e.g. \u201c3.1\u201d).</p> string <p>Name of a Kubernetes Secret that contains a kubeconfig formatted file that defines the audit webhook configuration.</p> string <p>The amount of time to wait before retrying the first failed request.</p> string <p>Strategy for sending audit events. Blocking indicates sending events should block server responses. Batch causes the backend to buffer and write events asynchronously.</p> boolean <p>Whether event and batch truncating is enabled.</p> integer <p>Maximum size of the batch sent to the underlying backend. Actual serialized size can be several hundreds of bytes greater. If a batch exceeds this limit, it is split into several batches of smaller size.</p> integer <p>Maximum size of the audit event sent to the underlying backend. If the size of an event is greater than this number, first request and response are removed, and if this doesn\u2019t reduce the size enough, event is discarded.</p> string <p>API group and version used for serializing audit events written to webhook.</p> object <p>Optional: Auth configures various aspects of Authentication and Authorization for this shard.</p> array <p>Optional: DropGroups configures groups to be dropped before forwarding requests to Shards.</p> string object <p>Optional: OIDC configures OpenID Connect Authentication.</p> object <p>Optionally provides a reference to a secret that contains a CA bundle for the OIDC issuer. This is useful when the OIDC issuer is not publicly trusted.</p> string <p>Key is the key in the secret that contains the CA file. Defaults to \u201cca.crt\u201d.</p> string Required <p>Name is the name of the secret that contains the CA file.</p> string Required <p>ClientID is the OIDC client ID configured on the issuer side for this KCP instance.</p> string <p>Optionally provide the client secret for the OIDC client. This is not used by KCP itself, but is used to generate a OIDC kubeconfig that can be shared with users to log in via the OIDC provider.</p> string <p>Experimental: Optionally provides a custom claim for fetching groups. The claim must be a string or an array of strings.</p> string <p>Optionally sets a custom groups prefix. This defaults to \u201coidc:\u201d if unset, which means a group called \u201cgroup1\u201d on the OIDC side will be recognised as \u201coidc:group1\u201d in KCP.</p> string Required <p>IssuerURL is used for the OIDC issuer URL. Only https URLs will be accepted.</p> string <p>Optionally uses a custom claim for fetching the username. This defaults to \u201csub\u201d if unset.</p> string <p>Optionally sets a custom username prefix. This defaults to \u201coidc:\u201d if unset, which means a user called \u201cuser@example.com\u201d on the OIDC side will be recognised as \u201coidc:user@example.com\u201d in KCP.</p> array <p>Optional: PassOnGroups configures groups to be passed on before forwarding requests to Shards</p> string object <p>Optional: serviceAccountAuthentication configures ServiceAccount Authentication.</p> boolean Required <p>Optional: Enabled enables or disables ServiceAccount Authentication. If set, it will mount every shard\u2019s service account certificate to the front-proxy.</p> object object array <p>A list of HTTP paths to skip during authorization, i.e. these are authorized without contacting the \u2018core\u2019 kubernetes server. If specified, completely overwrites the default of [/healthz,/readyz,/livez].</p> string string <p>The duration to cache \u2018authorized\u2019 responses from the webhook authorizer.</p> string <p>The duration to cache \u2018unauthorized\u2019 responses from the webhook authorizer.</p> string <p>Name of a Kubernetes Secret that contains a kubeconfig formatted file that defines the authorization webhook configuration.</p> string <p>The API version of the authorization.k8s.io SubjectAccessReview to send to and expect from the webhook.</p> object <p>CABundle references a v1.Secret object that contains the CA bundle that should be used to validate the API server\u2019s TLS certificate. The secret must contain a key named <code>tls.crt</code> that holds the PEM encoded CA certificate. It will be merged into the \u201cexternal-logical-cluster-admin-kubeconfig\u201d kubeconfig under the <code>certificate-authority-data</code> field. If not specified, the kubeconfig will use the CA bundle of the root shard or front-proxy referenced in the Target field. It will NOT be used to configure the API server\u2019s own TLS certificate or any other component.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>CertificateTemplates allows to customize the properties on the generated certificates for this shard.</p> string <p>ClusterDomain is the DNS domain for services in the cluster. Defaults to \u201ccluster.local\u201d if not set.</p> object <p>Optional: DeploymentTemplate configures the Kubernetes Deployment created for this shard.</p> object object <p>Annotations is a key value map to be copied to the target Deployment.</p> object <p>Labels is a key value map to be copied to the target Deployment.</p> object object <p>Template describes the pods that will be created.</p> object object <p>Annotations is a key value map to be copied to the Pod.</p> object <p>Labels is a key value map to be copied to the Pod.</p> object object <p>If specified, the pod\u2019s scheduling constraints</p> object <p>Describes node affinity scheduling rules for the pod.</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</p> object <p>An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it\u2019s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).</p> object Required <p>A node selector term, associated with the corresponding weight.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string integer Required <p>Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.</p> object <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</p> array Required <p>Required. A list of node selector terms. The terms are ORed.</p> object <p>A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.</p> array <p>A list of node selector requirements by node\u2019s labels.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string array <p>A list of node selector requirements by node\u2019s fields.</p> object <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>The label key that the selector applies to.</p> string Required <p>Represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p> array <p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p> string object <p>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> object <p>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</p> array <p>The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u201cweight\u201d to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p> object <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> object Required <p>Required. A pod affinity term, associated with the corresponding weight.</p> object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> integer Required <p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p> array <p>If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p> object <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running object <p>A label query over a set of resources, in this case pods. If it\u2019s null, this PodAffinityTerm matches with no Pods.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string array <p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod\u2019s pod (anti) affinity. Keys that don\u2019t exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn\u2019t set. This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).</p> string object <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \u201cthis pod\u2019s namespace\u201d. An empty selector ({}) matches all namespaces.</p> array <p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p> object <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> string Required <p>key is the label key that the selector applies to.</p> string Required <p>operator represents a key\u2019s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p> array <p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p> string object <p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u201ckey\u201d, the operator is \u201cIn\u201d, and the values array contains only \u201cvalue\u201d. The requirements are ANDed.</p> array <p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \u201cthis pod\u2019s namespace\u201d.</p> string string Required <p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p> array <p>HostAliases is an optional list of hosts and IPs that will be injected into the pod\u2019s hosts file if specified.</p> object <p>HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod\u2019s hosts file.</p> array <p>Hostnames for the above IP address.</p> string string Required <p>IP address of the host file entry.</p> array <p>ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node\u2019s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</p> array <p>If specified, the pod\u2019s tolerations.</p> object <p>The pod this Toleration is attached to tolerates any taint that matches the triple  using the matching operator . string <p>Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.</p> string <p>Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.</p> string <p>Operator represents a key\u2019s relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.</p> integer <p>TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.</p> string <p>Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.</p> object Required <p>Etcd configures the etcd cluster that this shard should be using.</p> array Required <p>Endpoints is a list of http urls at which etcd nodes are available. The expected format is \u201chttps://etcd-hostname:2379\u201d.</p> string object <p>ClientCert configures the client certificate used to access etcd.</p> object Required <p>SecretRef is the reference to a v1.Secret object that contains the TLS certificate.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> array <p>Optional: ExtraArgs defines additional command line arguments to pass to the shard container.</p> string object <p>ImageSpec defines settings for using a specific image and overwriting the default images used.</p> array <p>Optional: ImagePullSecrets is a list of secret references that should be used as image pull secrets (e.g. when a private registry is used).</p> object <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> string <p>Repository is the container image repository to use for KCP containers. Defaults to <code>ghcr.io/kcp-dev/kcp</code>.</p> string <p>Tag is the container image tag to use for KCP containers. Defaults to the latest kcp release that the operator supports.</p> object <p>Optional: LogLevel configures the logging verbosity for this shard.</p> integer <p>VerbosityLevel sets the verbosity level for the component. Higher values mean more verbose logging. This corresponds to the -v flag in KCP components.</p> integer <p>Replicas configures how many instances of this shard run in parallel. Defaults to 2 if not set.</p> object <p>Resources overrides the default resource requests and limits.</p> array <p>Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.</p> <p>This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.</p> <p>This field is immutable. It can only be set for containers.</p> object <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> string Required <p>Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.</p> string <p>Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.</p> object <p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object <p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> object Required object <p>Reference references a local RootShard object.</p> string <p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p> object <p>Optional: ServiceTemplate configures the Kubernetes Service created for this shard.</p> object <p>ServiceMetadataTemplate defines the default labels and annotations to be copied to the Kubernetes Service resource.</p> object <p>Annotations is a key value map to be copied to the target Kubernetes Service.</p> object <p>Labels is a key value map to be copied to the target Kubernetes Service.</p> object string string <p>Service Type string describes ingress methods for a service</p> string <p>ShardBaseURL is the base URL under which this shard should be reachable. This is used to configure the external URL. If not provided, the operator will use kubernetes service address to generate it.</p> object <p>ShardStatus defines the observed state of Shard</p> array object <p>Condition contains details for one aspect of the current state of this API Resource.</p> string Required <p>lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.</p> string Required <p>message is a human readable message indicating details about the transition. This may be an empty string.</p> integer <p>observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</p> string Required <p>reason contains a programmatic identifier indicating the reason for the condition\u2019s last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.</p> string Required <p>status of the condition, one of True, False, Unknown.</p> string Required <p>type of condition in CamelCase or in foo.example.com/CamelCase.</p> string"},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.apiVersion","title":".apiVersion","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.kind","title":".kind","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.metadata","title":".metadata","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec","title":".spec","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit","title":".spec.audit","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook","title":".spec.audit.webhook","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.batchBufferSize","title":".spec.audit.webhook.batchBufferSize","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.batchMaxSize","title":".spec.audit.webhook.batchMaxSize","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.batchMaxWait","title":".spec.audit.webhook.batchMaxWait","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.batchThrottleBurst","title":".spec.audit.webhook.batchThrottleBurst","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.batchThrottleEnable","title":".spec.audit.webhook.batchThrottleEnable","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.batchThrottleQPS","title":".spec.audit.webhook.batchThrottleQPS","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.configSecretName","title":".spec.audit.webhook.configSecretName","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.initialBackoff","title":".spec.audit.webhook.initialBackoff","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.mode","title":".spec.audit.webhook.mode","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.truncateEnabled","title":".spec.audit.webhook.truncateEnabled","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.truncateMaxBatchSize","title":".spec.audit.webhook.truncateMaxBatchSize","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.truncateMaxEventSize","title":".spec.audit.webhook.truncateMaxEventSize","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.audit.webhook.version","title":".spec.audit.webhook.version","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth","title":".spec.auth","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.dropGroups","title":".spec.auth.dropGroups","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.dropGroups[*]","title":".spec.auth.dropGroups[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc","title":".spec.auth.oidc","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.caFileRef","title":".spec.auth.oidc.caFileRef","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.caFileRef.key","title":".spec.auth.oidc.caFileRef.key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.caFileRef.name","title":".spec.auth.oidc.caFileRef.name","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.clientID","title":".spec.auth.oidc.clientID","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.clientSecret","title":".spec.auth.oidc.clientSecret","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.groupsClaim","title":".spec.auth.oidc.groupsClaim","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.groupsPrefix","title":".spec.auth.oidc.groupsPrefix","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.issuerURL","title":".spec.auth.oidc.issuerURL","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.usernameClaim","title":".spec.auth.oidc.usernameClaim","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.oidc.usernamePrefix","title":".spec.auth.oidc.usernamePrefix","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.passOnGroups","title":".spec.auth.passOnGroups","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.passOnGroups[*]","title":".spec.auth.passOnGroups[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.serviceAccount","title":".spec.auth.serviceAccount","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.auth.serviceAccount.enabled","title":".spec.auth.serviceAccount.enabled","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization","title":".spec.authorization","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization.webhook","title":".spec.authorization.webhook","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization.webhook.allowPaths","title":".spec.authorization.webhook.allowPaths","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization.webhook.allowPaths[*]","title":".spec.authorization.webhook.allowPaths[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization.webhook.cacheAuthorizedTTL","title":".spec.authorization.webhook.cacheAuthorizedTTL","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization.webhook.cacheUnauthorizedTTL","title":".spec.authorization.webhook.cacheUnauthorizedTTL","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization.webhook.configSecretName","title":".spec.authorization.webhook.configSecretName","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.authorization.webhook.version","title":".spec.authorization.webhook.version","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.caBundleSecretRef","title":".spec.caBundleSecretRef","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.caBundleSecretRef.name","title":".spec.caBundleSecretRef.name","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.certificateTemplates","title":".spec.certificateTemplates","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.clusterDomain","title":".spec.clusterDomain","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate","title":".spec.deploymentTemplate","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.metadata","title":".spec.deploymentTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.metadata.annotations","title":".spec.deploymentTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.metadata.labels","title":".spec.deploymentTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec","title":".spec.deploymentTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template","title":".spec.deploymentTemplate.spec.template","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata","title":".spec.deploymentTemplate.spec.template.metadata","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata.annotations","title":".spec.deploymentTemplate.spec.template.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.metadata.labels","title":".spec.deploymentTemplate.spec.template.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec","title":".spec.deploymentTemplate.spec.template.spec","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity","title":".spec.deploymentTemplate.spec.template.spec.affinity","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].preference.matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*].matchFields[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].podAffinityTerm.topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[*].weight","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].labelSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].matchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].mismatchLabelKeys[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchExpressions[*].values[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaceSelector.matchLabels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].namespaces[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","title":".spec.deploymentTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[*].topologyKey","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases","title":".spec.deploymentTemplate.spec.template.spec.hostAliases","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*]","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].hostnames[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.hostAliases[*].ip","title":".spec.deploymentTemplate.spec.template.spec.hostAliases[*].ip","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","title":".spec.deploymentTemplate.spec.template.spec.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.nodeSelector","title":".spec.deploymentTemplate.spec.template.spec.nodeSelector","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations","title":".spec.deploymentTemplate.spec.template.spec.tolerations","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*]","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].effect","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].effect","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].key","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].key","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].operator","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].operator","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].tolerationSeconds","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.deploymentTemplate.spec.template.spec.tolerations[*].value","title":".spec.deploymentTemplate.spec.template.spec.tolerations[*].value","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.etcd","title":".spec.etcd","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.etcd.endpoints","title":".spec.etcd.endpoints","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.etcd.endpoints[*]","title":".spec.etcd.endpoints[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.etcd.tlsConfig","title":".spec.etcd.tlsConfig","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.etcd.tlsConfig.secretRef","title":".spec.etcd.tlsConfig.secretRef","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.etcd.tlsConfig.secretRef.name","title":".spec.etcd.tlsConfig.secretRef.name","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.extraArgs","title":".spec.extraArgs","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.extraArgs[*]","title":".spec.extraArgs[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.image","title":".spec.image","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.image.imagePullSecrets","title":".spec.image.imagePullSecrets","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.image.imagePullSecrets[*]","title":".spec.image.imagePullSecrets[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.image.imagePullSecrets[*].name","title":".spec.image.imagePullSecrets[*].name","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.image.repository","title":".spec.image.repository","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.image.tag","title":".spec.image.tag","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.logLevel","title":".spec.logLevel","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.logLevel.verbosityLevel","title":".spec.logLevel.verbosityLevel","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.replicas","title":".spec.replicas","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.resources","title":".spec.resources","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.resources.claims","title":".spec.resources.claims","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.resources.claims[*]","title":".spec.resources.claims[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.resources.claims[*].name","title":".spec.resources.claims[*].name","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.resources.claims[*].request","title":".spec.resources.claims[*].request","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.resources.limits","title":".spec.resources.limits","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.resources.requests","title":".spec.resources.requests","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.rootShard","title":".spec.rootShard","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.rootShard.ref","title":".spec.rootShard.ref","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.rootShard.ref.name","title":".spec.rootShard.ref.name","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.serviceTemplate","title":".spec.serviceTemplate","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.serviceTemplate.metadata","title":".spec.serviceTemplate.metadata","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.serviceTemplate.metadata.annotations","title":".spec.serviceTemplate.metadata.annotations","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.serviceTemplate.metadata.labels","title":".spec.serviceTemplate.metadata.labels","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.serviceTemplate.spec","title":".spec.serviceTemplate.spec","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.serviceTemplate.spec.clusterIP","title":".spec.serviceTemplate.spec.clusterIP","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.serviceTemplate.spec.type","title":".spec.serviceTemplate.spec.type","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.spec.shardBaseURL","title":".spec.shardBaseURL","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status","title":".status","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions","title":".status.conditions","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions[*]","title":".status.conditions[*]","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions[*].lastTransitionTime","title":".status.conditions[*].lastTransitionTime","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions[*].message","title":".status.conditions[*].message","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions[*].observedGeneration","title":".status.conditions[*].observedGeneration","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions[*].reason","title":".status.conditions[*].reason","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions[*].status","title":".status.conditions[*].status","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.conditions[*].type","title":".status.conditions[*].type","text":""},{"location":"reference/crd/operator.kcp.io/shards/#v1alpha1-.status.phase","title":".status.phase","text":""},{"location":"setup/","title":"Setup","text":""},{"location":"setup/#requirements","title":"Requirements","text":"<ul> <li>cert-manager (see Installing with Helm)</li> </ul>"},{"location":"setup/#helm-chart","title":"Helm Chart","text":"<p>A Helm chart for kcp-operator is maintained in kcp-dev/helm-charts. To install it, first add the Helm repository:</p> <pre><code>helm repo add kcp https://kcp-dev.github.io/helm-charts\n</code></pre> <p>And then install the chart:</p> <pre><code>helm install --create-namespace --namespace kcp-operator kcp-operator kcp/kcp-operator\n</code></pre> <p>For full configuration options, check out the Chart values.</p>"},{"location":"setup/#further-reading","title":"Further Reading","text":""},{"location":"setup/#quickstart","title":"Quickstart","text":"<p>Create your first objects after installing kcp-operator.</p>"},{"location":"setup/quickstart/","title":"Quickstart","text":"<p>kcp-operator has to be installed according to the instructions given in Setup before starting the steps below.</p>"},{"location":"setup/quickstart/#etcd","title":"etcd","text":"<p>Warning</p> <p>Never deploy etcd like below in production as it sets up an etcd instance without authentication or TLS.</p> <p>Running a root shard requires a running etcd instance/cluster. A simple one can be set up with Helm and the CI chart used by the kcp-operator for testing itself:</p> <pre><code>git clone https://github.com/kcp-dev/kcp-operator\nhelm install etcd ./kcp-operator/hack/ci/testdata/etcd\n</code></pre>"},{"location":"setup/quickstart/#create-root-shard","title":"Create Root Shard","text":"<p>In addition to a running etcd, the root shard requires a reference to a cert-manager <code>Issuer</code> to issue its PKI. Create a self-signing one:</p> <pre><code>apiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: selfsigned\nspec:\n  selfSigned: {}\n</code></pre> <p>Afterward, create the first <code>RootShard</code> object. API documentation is available in the CRD reference.</p> <p>The main change to make is replacing <code>example.operator.kcp.io</code> with a hostname to be used for the kcp instance. The DNS entry should not be set yet.</p> <pre><code>apiVersion: operator.kcp.io/v1alpha1\nkind: RootShard\nmetadata:\n  name: root\nspec:\n  external:\n    # replace the hostname with the external DNS name for your kcp instance\n    hostname: example.operator.kcp.io\n    port: 6443\n  certificates:\n    # this references the issuer created above\n    issuerRef:\n      group: cert-manager.io\n      kind: Issuer\n      name: selfsigned\n  cache:\n    embedded:\n      # kcp comes with a cache server accessible to all shards,\n      # in this case it is fine to enable the embedded instance\n      enabled: true\n  etcd:\n    endpoints:\n      # this is the service URL to etcd. Replace if Helm chart was\n      # installed under a different name or the namespace is not \"default\"\n      - http://etcd.default.svc.cluster.local:2379\n</code></pre> <p>kcp-operator will create the necessary resources to start a <code>Deployment</code> of a kcp root shard and the necessary PKI infrastructure (via cert-manager).</p>"},{"location":"setup/quickstart/#set-up-front-proxy","title":"Set up Front Proxy","text":"<p>Every kcp instance deployed with kcp-operator needs at least one instance of kcp-front-proxy to be fully functional. Multiple front-proxy instances can exist to provide access to a complex, multi-shard geo-distributed setup.</p> <p>For getting started, a <code>FrontProxy</code> object can look like this:</p> <pre><code>apiVersion: operator.kcp.io/v1alpha1\nkind: FrontProxy\nmetadata:\n  name: frontproxy\nspec:\n  rootShard:\n    ref:\n      # the name of the RootShard object created before\n      name: root\n  serviceTemplate:\n    spec:\n      # expose this front-proxy via a load balancer\n      type: LoadBalancer\n</code></pre> <p>kcp-operator will deploy a kcp-front-proxy installation based on this and connect it to the <code>root</code> root shard created before.</p>"},{"location":"setup/quickstart/#dns-setup","title":"DNS Setup","text":"<p>Once the <code>Service</code> <code>&lt;Object Name&gt;-front-proxy</code> has successfully been reconciled, it should have either an IP address or a DNS name (depending on which load balancing integration is active on the Kubernetes cluster). A DNS entry for the chosen external hostname (this was set in the <code>RootShard</code>) has to be set and should point to the IP address (with an A/AAAA DNS entry) or the DNS name (with a CNAME DNS entry).</p> <p>Assuming this is what the <code>frontproxy-front-proxy</code> <code>Service</code> looks like:</p> <pre><code>\u001bkubectl get svc frontproxy-front-proxy\n</code></pre> <p>Output should look like this:</p> <pre><code>NAME                     TYPE           CLUSTER-IP     EXTERNAL-IP                          PORT(S)          AGE\nfrontproxy-front-proxy   LoadBalancer   10.240.30.54   XYZ.eu-central-1.elb.amazonaws.com   6443:32032/TCP   3m13s\n</code></pre> <p>Now a CNAME entry from <code>example.operator.kcp.io</code> to <code>XYZ.eu-central-1.elb.amazonaws.com</code> is required.</p> <p>Hint</p> <p>Tools like external-dns can help with automating this step to avoid manual DNS configuration.</p>"},{"location":"setup/quickstart/#initial-access","title":"Initial Access","text":"<p>Once deployed, a <code>Kubeconfig</code> object can be created to generate credentials to initially access the kcp setup. An admin kubeconfig can be generated like this:</p> <pre><code>apiVersion: operator.kcp.io/v1alpha1\nkind: Kubeconfig\nmetadata:\n  name: kubeconfig-kcp-admin\nspec:\n  # the user name embedded in the kubeconfig\n  username: kcp-admin\n  groups:\n    # system:kcp:admin is a special privileged group in kcp.\n    # the kubeconfig generated from this should be kept secure at all times\n    - system:kcp:admin\n  # the kubeconfig will be valid for 365d but will be automatically refreshed\n  validity: 8766h\n  secretRef:\n    # the name of the secret that the assembled kubeconfig should be written to\n    name: admin-kubeconfig\n  target:\n    # a reference to the frontproxy deployed previously so the kubeconfig is accepted by it\n    frontProxyRef:\n      name: frontproxy\n</code></pre> <p>Once <code>admin-kubeconfig</code> has been created, the generated kubeconfig can be fetched:</p> <pre><code>kubectl get secret admin-kubeconfig -o jsonpath=\"{.data.kubeconfig}\" | base64 -d &gt; admin.kubeconfig\n</code></pre> <p>To use this kubeconfig, set the <code>KUBECONFIG</code> environment variable appropriately:</p> <pre><code>export KUBECONFIG=$(pwd)/admin.kubeconfig\n</code></pre> <p>It is now possible to connect to the kcp instance and create new workspaces via kubectl create-workspace:</p> <pre><code>kubectl get ws\n</code></pre> <p>Initially, the command should return that no workspaces exist yet:</p> <pre><code>No resources found\n</code></pre> <p>To create a workspace, run:</p> <pre><code>kubectl create-workspace test\n</code></pre> <p>Output should look like this:</p> <pre><code>Workspace \"test\" (type root:organization) created. Waiting for it to be ready...\nWorkspace \"test\" (type root:organization) is ready to use.\n</code></pre> <p>Congratulations, you've successfully set up kcp and connected to it! </p>"},{"location":"setup/quickstart/#further-reading","title":"Further Reading","text":"<ul> <li>Check out the CRD documentation for all configuration options.</li> </ul>"}]}