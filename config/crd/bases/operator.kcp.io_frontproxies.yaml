---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: frontproxies.operator.kcp.io
spec:
  group: operator.kcp.io
  names:
    kind: FrontProxy
    listKind: FrontProxyList
    plural: frontproxies
    singular: frontproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.rootShard.ref.name
      name: RootShard
      type: string
    - jsonPath: .spec.externalHostname
      name: ExternalHostname
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FrontProxy is the Schema for the frontproxies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FrontProxySpec defines the desired state of FrontProxy.
            properties:
              additionalPathMappings:
                description: 'Optional: AdditionalPathMappings configures // TODO
                  ?'
                items:
                  description: so we have to copy the struct type
                  properties:
                    backend:
                      type: string
                    backend_server_ca:
                      type: string
                    path:
                      type: string
                    proxy_client_cert:
                      type: string
                    proxy_client_key:
                      type: string
                  required:
                  - backend
                  - backend_server_ca
                  - path
                  - proxy_client_cert
                  - proxy_client_key
                  type: object
                type: array
              auth:
                description: 'Optional: Auth configures various aspects of Authentication
                  and Authorization for this front-proxy instance.'
                properties:
                  dropGroups:
                    description: 'Optional: DropGroups configures groups to be dropped
                      before forwarding requests to Shards'
                    items:
                      type: string
                    type: array
                  oidc:
                    description: 'Optional: OIDC configures OpenID Connect Authentication.'
                    properties:
                      clientID:
                        description: ClientID is the OIDC client ID configured on
                          the issuer side for this KCP instance.
                        type: string
                      clientSecret:
                        description: |-
                          Optionally provide the client secret for the OIDC client. This is not used by KCP itself, but is used to generate
                          a OIDC kubeconfig that can be shared with users to log in via the OIDC provider.
                        type: string
                      enabled:
                        type: boolean
                      groupsClaim:
                        description: 'Experimental: Optionally provides a custom claim
                          for fetching groups. The claim must be a string or an array
                          of strings.'
                        type: string
                      groupsPrefix:
                        description: |-
                          Optionally sets a custom groups prefix. This defaults to "oidc:" if unset, which means a group called "group1"
                          on the OIDC side will be recognised as "oidc:group1" in KCP.
                        type: string
                      issuerURL:
                        description: IssuerURL is used for the OIDC issuer URL. Only
                          https URLs will be accepted.
                        type: string
                      usernameClaim:
                        description: Optionally uses a custom claim for fetching the
                          username. This defaults to "sub" if unset.
                        type: string
                      usernamePrefix:
                        description: |-
                          Optionally sets a custom username prefix. This defaults to "oidc:" if unset, which means a user called "user@example.com"
                          on the OIDC side will be recognised as "oidc:user@example.com" in KCP.
                        type: string
                    required:
                    - clientID
                    - enabled
                    - issuerURL
                    type: object
                  passOnGroups:
                    description: 'Optional: PassOnGroups configures groups to be passed
                      on before forwarding requests to Shards'
                    items:
                      type: string
                    type: array
                type: object
              certificateTemplates:
                additionalProperties:
                  properties:
                    metadata:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations is a key value map to be copied
                            to the target Certificate.
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels is a key value map to be copied to the
                            target Certificate.
                          type: object
                      type: object
                    spec:
                      properties:
                        dnsNames:
                          description: |-
                            Requested DNS subject alternative names. The values given here will be merged into the
                            DNS names determined automatically by the kcp-operator.
                          items:
                            type: string
                          type: array
                        duration:
                          description: |-
                            Requested 'duration' (i.e. lifetime) of the Certificate. Note that the
                            issuer may choose to ignore the requested duration, just like any other
                            requested attribute.

                            If unset, this defaults to 90 days.
                            Minimum accepted duration is 1 hour.
                            Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                          type: string
                        ipAddresses:
                          description: |-
                            Requested IP address subject alternative names. The values given here will be merged into the
                            DNS names determined automatically by the kcp-operator.
                          items:
                            type: string
                          type: array
                        privateKey:
                          description: |-
                            Private key options. These include the key algorithm and size, the used
                            encoding and the rotation policy.
                          properties:
                            algorithm:
                              description: |-
                                Algorithm is the private key algorithm of the corresponding private key
                                for this certificate.

                                If provided, allowed values are either `RSA`, `ECDSA` or `Ed25519`.
                                If `algorithm` is specified and `size` is not provided,
                                key size of 2048 will be used for `RSA` key algorithm and
                                key size of 256 will be used for `ECDSA` key algorithm.
                                key size is ignored when using the `Ed25519` key algorithm.
                              enum:
                              - RSA
                              - ECDSA
                              - Ed25519
                              type: string
                            encoding:
                              description: |-
                                The private key cryptography standards (PKCS) encoding for this
                                certificate's private key to be encoded in.

                                If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                                and PKCS#8, respectively.
                                Defaults to `PKCS1` if not specified.
                              enum:
                              - PKCS1
                              - PKCS8
                              type: string
                            rotationPolicy:
                              description: |-
                                RotationPolicy controls how private keys should be regenerated when a
                                re-issuance is being processed.

                                If set to `Never`, a private key will only be generated if one does not
                                already exist in the target `spec.secretName`. If one does exist but it
                                does not have the correct algorithm or size, a warning will be raised
                                to await user intervention.
                                If set to `Always`, a private key matching the specified requirements
                                will be generated whenever a re-issuance occurs.
                                Default is `Never` for backward compatibility.
                              enum:
                              - Never
                              - Always
                              type: string
                            size:
                              description: |-
                                Size is the key bit size of the corresponding private key for this certificate.

                                If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`,
                                and will default to `2048` if not specified.
                                If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`,
                                and will default to `256` if not specified.
                                If `algorithm` is set to `Ed25519`, Size is ignored.
                                No other values are allowed.
                              type: integer
                          type: object
                        renewBefore:
                          description: |-
                            How long before the currently issued certificate's expiry cert-manager should
                            renew the certificate. For example, if a certificate is valid for 60 minutes,
                            and `renewBefore=10m`, cert-manager will begin to attempt to renew the certificate
                            50 minutes after it was issued (i.e. when there are 10 minutes remaining until
                            the certificate is no longer valid).

                            NOTE: The actual lifetime of the issued certificate is used to determine the
                            renewal time. If an issuer returns a certificate with a different lifetime than
                            the one requested, cert-manager will use the lifetime of the issued certificate.

                            If unset, this defaults to 1/3 of the issued certificate's lifetime.
                            Minimum accepted value is 5 minutes.
                            Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                            Cannot be set if the `renewBeforePercentage` field is set.
                          type: string
                        secretTemplate:
                          description: |-
                            Defines annotations and labels to be copied to the Certificate's Secret.
                            Labels and annotations on the Secret will be changed as they appear on the
                            SecretTemplate when added or removed. SecretTemplate annotations are added
                            in conjunction with, and cannot overwrite, the base set of annotations
                            cert-manager sets on the Certificate's Secret.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations is a key value map to be copied
                                to the target Kubernetes Secret.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels is a key value map to be copied
                                to the target Kubernetes Secret.
                              type: object
                          type: object
                        subject:
                          description: |-
                            Requested set of X509 certificate subject attributes.
                            More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6
                          properties:
                            countries:
                              description: Countries to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            localities:
                              description: Cities to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            organizationalUnits:
                              description: Organizational Units to be used on the
                                Certificate.
                              items:
                                type: string
                              type: array
                            organizations:
                              description: Organizations to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            postalCodes:
                              description: Postal codes to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            provinces:
                              description: State/Provinces to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            serialNumber:
                              description: Serial number to be used on the Certificate.
                              type: string
                            streetAddresses:
                              description: Street addresses to be used on the Certificate.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                  type: object
                description: |-
                  CertificateTemplates allows to customize the properties on the generated
                  certificates for this root shard.
                type: object
              externalHostname:
                description: 'Optional: ExternalHostname under which the FrontProxy
                  can be reached. If empty, the RootShard''s external hostname will
                  be used only.'
                type: string
              image:
                description: 'Optional: Image defines the image to use. Defaults to
                  the latest versioned image during the release of kcp-operator.'
                properties:
                  imagePullSecrets:
                    description: 'Optional: ImagePullSecrets is a list of secret references
                      that should be used as image pull secrets (e.g. when a private
                      registry is used).'
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  repository:
                    description: Repository is the container image repository to use
                      for KCP containers. Defaults to `ghcr.io/kcp-dev/kcp`.
                    type: string
                  tag:
                    description: Tag is the container image tag to use for KCP containers.
                      Defaults to the latest kcp release that the operator supports.
                    type: string
                type: object
              replicas:
                description: 'Optional: Replicas configures the replica count for
                  the front-proxy Deployment.'
                format: int32
                type: integer
              rootShard:
                description: RootShard configures the kcp root shard that this front-proxy
                  instance should connect to.
                properties:
                  ref:
                    description: Reference references a local RootShard object.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              serviceTemplate:
                description: 'Optional: ServiceTemplate configures the Kubernetes
                  Service created for this front-proxy instance.'
                properties:
                  metadata:
                    description: |-
                      ServiceMetadataTemplate defines the default labels and annotations
                      to be copied to the Kubernetes Service resource.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is a key value map to be copied to
                          the target Kubernetes Service.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is a key value map to be copied to the
                          target Kubernetes Service.
                        type: object
                    type: object
                  spec:
                    properties:
                      type:
                        description: Service Type string describes ingress methods
                          for a service
                        type: string
                    type: object
                type: object
            required:
            - rootShard
            type: object
          status:
            description: FrontProxyStatus defines the observed state of FrontProxy
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
