---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: kubeconfigs.operator.kcp.io
spec:
  group: operator.kcp.io
  names:
    kind: Kubeconfig
    listKind: KubeconfigList
    plural: kubeconfigs
    singular: kubeconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Kubeconfig is the Schema for the kubeconfigs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KubeconfigSpec defines the desired state of Kubeconfig.
            properties:
              certificateTemplate:
                description: |-
                  CertificateTemplate allows to customize the properties on the generated
                  certificate for this kubeconfig.
                properties:
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is a key value map to be copied to
                          the target Certificate.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is a key value map to be copied to the
                          target Certificate.
                        type: object
                    type: object
                  spec:
                    properties:
                      dnsNames:
                        description: |-
                          Requested DNS subject alternative names. The values given here will be merged into the
                          DNS names determined automatically by the kcp-operator.
                          If DNSNames is used together with IssuerRef, DNSNames will be uses as-is and not merged.
                          If IssuerRef is not set, DNSNames will be merged with the defaults. This is to avoid
                          trying to guess what DNSNames configued issuer might support.
                        items:
                          type: string
                        type: array
                      duration:
                        description: |-
                          Requested 'duration' (i.e. lifetime) of the Certificate. Note that the
                          issuer may choose to ignore the requested duration, just like any other
                          requested attribute.

                          If unset, this defaults to 90 days.
                          Minimum accepted duration is 1 hour.
                          Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                        type: string
                      ipAddresses:
                        description: |-
                          Requested IP address subject alternative names. The values given here will be merged into the
                          DNS names determined automatically by the kcp-operator.
                        items:
                          type: string
                        type: array
                      issuerRef:
                        description: IssuerRef is a reference to the issuer for this
                          certificate.
                        properties:
                          group:
                            description: Group of the object being referred to.
                            type: string
                          kind:
                            description: Kind of the object being referred to.
                            type: string
                          name:
                            description: Name of the object being referred to.
                            type: string
                        required:
                        - name
                        type: object
                      privateKey:
                        description: |-
                          Private key options. These include the key algorithm and size, the used
                          encoding and the rotation policy.
                        properties:
                          algorithm:
                            description: |-
                              Algorithm is the private key algorithm of the corresponding private key
                              for this certificate.

                              If provided, allowed values are either `RSA`, `ECDSA` or `Ed25519`.
                              If `algorithm` is specified and `size` is not provided,
                              key size of 2048 will be used for `RSA` key algorithm and
                              key size of 256 will be used for `ECDSA` key algorithm.
                              key size is ignored when using the `Ed25519` key algorithm.
                            enum:
                            - RSA
                            - ECDSA
                            - Ed25519
                            type: string
                          encoding:
                            description: |-
                              The private key cryptography standards (PKCS) encoding for this
                              certificate's private key to be encoded in.

                              If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                              and PKCS#8, respectively.
                              Defaults to `PKCS1` if not specified.
                            enum:
                            - PKCS1
                            - PKCS8
                            type: string
                          rotationPolicy:
                            description: |-
                              RotationPolicy controls how private keys should be regenerated when a
                              re-issuance is being processed.

                              If set to `Never`, a private key will only be generated if one does not
                              already exist in the target `spec.secretName`. If one does exist but it
                              does not have the correct algorithm or size, a warning will be raised
                              to await user intervention.
                              If set to `Always`, a private key matching the specified requirements
                              will be generated whenever a re-issuance occurs.
                              Default is `Never` for backward compatibility.
                            enum:
                            - Never
                            - Always
                            type: string
                          size:
                            description: |-
                              Size is the key bit size of the corresponding private key for this certificate.

                              If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`,
                              and will default to `2048` if not specified.
                              If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`,
                              and will default to `256` if not specified.
                              If `algorithm` is set to `Ed25519`, Size is ignored.
                              No other values are allowed.
                            type: integer
                        type: object
                      renewBefore:
                        description: |-
                          How long before the currently issued certificate's expiry cert-manager should
                          renew the certificate. For example, if a certificate is valid for 60 minutes,
                          and `renewBefore=10m`, cert-manager will begin to attempt to renew the certificate
                          50 minutes after it was issued (i.e. when there are 10 minutes remaining until
                          the certificate is no longer valid).

                          NOTE: The actual lifetime of the issued certificate is used to determine the
                          renewal time. If an issuer returns a certificate with a different lifetime than
                          the one requested, cert-manager will use the lifetime of the issued certificate.

                          If unset, this defaults to 1/3 of the issued certificate's lifetime.
                          Minimum accepted value is 5 minutes.
                          Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                          Cannot be set if the `renewBeforePercentage` field is set.
                        type: string
                      secretTemplate:
                        description: |-
                          Defines annotations and labels to be copied to the Certificate's Secret.
                          Labels and annotations on the Secret will be changed as they appear on the
                          SecretTemplate when added or removed. SecretTemplate annotations are added
                          in conjunction with, and cannot overwrite, the base set of annotations
                          cert-manager sets on the Certificate's Secret.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations is a key value map to be copied
                              to the target Kubernetes Secret.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels is a key value map to be copied to
                              the target Kubernetes Secret.
                            type: object
                        type: object
                      subject:
                        description: |-
                          Requested set of X509 certificate subject attributes.
                          More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6
                        properties:
                          countries:
                            description: Countries to be used on the Certificate.
                            items:
                              type: string
                            type: array
                          localities:
                            description: Cities to be used on the Certificate.
                            items:
                              type: string
                            type: array
                          organizationalUnits:
                            description: Organizational Units to be used on the Certificate.
                            items:
                              type: string
                            type: array
                          organizations:
                            description: Organizations to be used on the Certificate.
                            items:
                              type: string
                            type: array
                          postalCodes:
                            description: Postal codes to be used on the Certificate.
                            items:
                              type: string
                            type: array
                          provinces:
                            description: State/Provinces to be used on the Certificate.
                            items:
                              type: string
                            type: array
                          serialNumber:
                            description: Serial number to be used on the Certificate.
                            type: string
                          streetAddresses:
                            description: Street addresses to be used on the Certificate.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                type: object
              groups:
                description: Username defines the groups embedded in the TLS certificate
                  generated for this kubeconfig.
                items:
                  type: string
                type: array
              secretRef:
                description: SecretRef defines the v1.Secret object that the resulting
                  kubeconfig should be written to.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              target:
                description: Target configures which kcp-operator object this kubeconfig
                  should be generated for (shard or front-proxy).
                properties:
                  frontProxyRef:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  rootShardRef:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  shardRef:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              username:
                description: Username defines the username embedded in the TLS certificate
                  generated for this kubeconfig.
                type: string
              validity:
                description: Validity configures the lifetime of the embedded TLS
                  certificate. The kubeconfig secret will be automatically regenerated
                  when the certificate expires.
                type: string
            required:
            - secretRef
            - target
            - username
            - validity
            type: object
          status:
            description: KubeconfigStatus defines the observed state of Kubeconfig
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
