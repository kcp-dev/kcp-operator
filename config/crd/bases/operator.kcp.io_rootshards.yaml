---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: rootshards.operator.kcp.io
spec:
  group: operator.kcp.io
  names:
    kind: RootShard
    listKind: RootShardList
    plural: rootshards
    singular: rootshard
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.external.hostname
      name: Hostname
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RootShard is the Schema for the kcpinstances API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RootShardSpec defines the desired state of RootShard.
            properties:
              audit:
                properties:
                  webhook:
                    properties:
                      batchBufferSize:
                        description: The size of the buffer to store events before
                          batching and writing. Only used in batch mode.
                        type: integer
                      batchMaxSize:
                        description: The maximum size of a batch. Only used in batch
                          mode.
                        type: integer
                      batchMaxWait:
                        description: |-
                          The amount of time to wait before force writing the batch that hadn't reached the max size.
                          Only used in batch mode.
                        type: string
                      batchThrottleBurst:
                        description: |-
                          Maximum number of requests sent at the same moment if ThrottleQPS was not utilized before.
                          Only used in batch mode.
                        type: integer
                      batchThrottleEnable:
                        description: Whether batching throttling is enabled. Only
                          used in batch mode.
                        type: boolean
                      batchThrottleQPS:
                        description: |-
                          Maximum average number of batches per second. Only used in batch mode.
                          This value is a floating point number, stored as a string (e.g. "3.1").
                        type: string
                      configSecretName:
                        description: |-
                          Name of a Kubernetes Secret that contains a kubeconfig formatted file that defines the
                          audit webhook configuration.
                        type: string
                      initialBackoff:
                        description: The amount of time to wait before retrying the
                          first failed request.
                        type: string
                      mode:
                        description: |-
                          Strategy for sending audit events. Blocking indicates sending events should block server
                          responses. Batch causes the backend to buffer and write events asynchronously.
                        enum:
                        - ""
                        - batch
                        - blocking
                        - blocking-strict
                        type: string
                      truncateEnabled:
                        description: Whether event and batch truncating is enabled.
                        type: boolean
                      truncateMaxBatchSize:
                        description: |-
                          Maximum size of the batch sent to the underlying backend. Actual serialized size can be
                          several hundreds of bytes greater. If a batch exceeds this limit, it is split into several
                          batches of smaller size.
                        type: integer
                      truncateMaxEventSize:
                        description: |-
                          Maximum size of the audit event sent to the underlying backend. If the size of an event
                          is greater than this number, first request and response are removed, and if this doesn't
                          reduce the size enough, event is discarded.
                        type: integer
                      version:
                        description: API group and version used for serializing audit
                          events written to webhook.
                        type: string
                    type: object
                type: object
              authorization:
                properties:
                  webhook:
                    properties:
                      allowPaths:
                        description: |-
                          A list of HTTP paths to skip during authorization, i.e. these are authorized without contacting the 'core' kubernetes server.
                          If specified, completely overwrites the default of [/healthz,/readyz,/livez].
                        items:
                          type: string
                        type: array
                      cacheAuthorizedTTL:
                        description: The duration to cache 'authorized' responses
                          from the webhook authorizer.
                        type: string
                      cacheUnauthorizedTTL:
                        description: The duration to cache 'unauthorized' responses
                          from the webhook authorizer.
                        type: string
                      configSecretName:
                        description: |-
                          Name of a Kubernetes Secret that contains a kubeconfig formatted file that defines the
                          authorization webhook configuration.
                        type: string
                      version:
                        description: The API version of the authorization.k8s.io SubjectAccessReview
                          to send to and expect from the webhook.
                        type: string
                    type: object
                type: object
              cache:
                description: Cache configures the cache server (with a Kubernetes-like
                  API) used by a sharded kcp instance.
                properties:
                  embedded:
                    description: Embedded configures settings for starting the cache
                      server embedded in the root shard.
                    properties:
                      enabled:
                        description: Enabled enables or disables running the cache
                          server as embedded.
                        type: boolean
                    required:
                    - enabled
                    type: object
                type: object
              certificateTemplates:
                additionalProperties:
                  properties:
                    metadata:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations is a key value map to be copied
                            to the target Certificate.
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels is a key value map to be copied to the
                            target Certificate.
                          type: object
                      type: object
                    spec:
                      properties:
                        dnsNames:
                          description: |-
                            Requested DNS subject alternative names. The values given here will be merged into the
                            DNS names determined automatically by the kcp-operator.
                          items:
                            type: string
                          type: array
                        duration:
                          description: |-
                            Requested 'duration' (i.e. lifetime) of the Certificate. Note that the
                            issuer may choose to ignore the requested duration, just like any other
                            requested attribute.

                            If unset, this defaults to 90 days.
                            Minimum accepted duration is 1 hour.
                            Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                          type: string
                        ipAddresses:
                          description: |-
                            Requested IP address subject alternative names. The values given here will be merged into the
                            DNS names determined automatically by the kcp-operator.
                          items:
                            type: string
                          type: array
                        privateKey:
                          description: |-
                            Private key options. These include the key algorithm and size, the used
                            encoding and the rotation policy.
                          properties:
                            algorithm:
                              description: |-
                                Algorithm is the private key algorithm of the corresponding private key
                                for this certificate.

                                If provided, allowed values are either `RSA`, `ECDSA` or `Ed25519`.
                                If `algorithm` is specified and `size` is not provided,
                                key size of 2048 will be used for `RSA` key algorithm and
                                key size of 256 will be used for `ECDSA` key algorithm.
                                key size is ignored when using the `Ed25519` key algorithm.
                              enum:
                              - RSA
                              - ECDSA
                              - Ed25519
                              type: string
                            encoding:
                              description: |-
                                The private key cryptography standards (PKCS) encoding for this
                                certificate's private key to be encoded in.

                                If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                                and PKCS#8, respectively.
                                Defaults to `PKCS1` if not specified.
                              enum:
                              - PKCS1
                              - PKCS8
                              type: string
                            rotationPolicy:
                              description: |-
                                RotationPolicy controls how private keys should be regenerated when a
                                re-issuance is being processed.

                                If set to `Never`, a private key will only be generated if one does not
                                already exist in the target `spec.secretName`. If one does exist but it
                                does not have the correct algorithm or size, a warning will be raised
                                to await user intervention.
                                If set to `Always`, a private key matching the specified requirements
                                will be generated whenever a re-issuance occurs.
                                Default is `Never` for backward compatibility.
                              enum:
                              - Never
                              - Always
                              type: string
                            size:
                              description: |-
                                Size is the key bit size of the corresponding private key for this certificate.

                                If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`,
                                and will default to `2048` if not specified.
                                If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`,
                                and will default to `256` if not specified.
                                If `algorithm` is set to `Ed25519`, Size is ignored.
                                No other values are allowed.
                              type: integer
                          type: object
                        renewBefore:
                          description: |-
                            How long before the currently issued certificate's expiry cert-manager should
                            renew the certificate. For example, if a certificate is valid for 60 minutes,
                            and `renewBefore=10m`, cert-manager will begin to attempt to renew the certificate
                            50 minutes after it was issued (i.e. when there are 10 minutes remaining until
                            the certificate is no longer valid).

                            NOTE: The actual lifetime of the issued certificate is used to determine the
                            renewal time. If an issuer returns a certificate with a different lifetime than
                            the one requested, cert-manager will use the lifetime of the issued certificate.

                            If unset, this defaults to 1/3 of the issued certificate's lifetime.
                            Minimum accepted value is 5 minutes.
                            Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                            Cannot be set if the `renewBeforePercentage` field is set.
                          type: string
                        secretTemplate:
                          description: |-
                            Defines annotations and labels to be copied to the Certificate's Secret.
                            Labels and annotations on the Secret will be changed as they appear on the
                            SecretTemplate when added or removed. SecretTemplate annotations are added
                            in conjunction with, and cannot overwrite, the base set of annotations
                            cert-manager sets on the Certificate's Secret.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations is a key value map to be copied
                                to the target Kubernetes Secret.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels is a key value map to be copied
                                to the target Kubernetes Secret.
                              type: object
                          type: object
                        subject:
                          description: |-
                            Requested set of X509 certificate subject attributes.
                            More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6
                          properties:
                            countries:
                              description: Countries to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            localities:
                              description: Cities to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            organizationalUnits:
                              description: Organizational Units to be used on the
                                Certificate.
                              items:
                                type: string
                              type: array
                            organizations:
                              description: Organizations to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            postalCodes:
                              description: Postal codes to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            provinces:
                              description: State/Provinces to be used on the Certificate.
                              items:
                                type: string
                              type: array
                            serialNumber:
                              description: Serial number to be used on the Certificate.
                              type: string
                            streetAddresses:
                              description: Street addresses to be used on the Certificate.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                  type: object
                description: |-
                  CertificateTemplates allows to customize the properties on the generated
                  certificates for this root shard.
                type: object
              certificates:
                description: |-
                  Certificates configures how the operator should create the kcp root CA, from which it will
                  then create all other sub CAs and leaf certificates.
                properties:
                  caSecretRef:
                    description: |-
                      CASecretRef can be used as an alternative to the IssuerRef: This field allows to configure
                      a pre-existing CA certificate that should be used as sign kcp certificates.
                      This Secret must contain both the certificate and the private key so that new sub certificates
                      can be signed and created from this CA. This field is mutually exclusive with issuerRef.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  issuerRef:
                    description: |-
                      IssuerRef points to a pre-existing cert-manager Issuer or ClusterIssuer that shall be used
                      to acquire new certificates. This field is mutually exclusive with caSecretRef.
                    properties:
                      group:
                        description: Group of the object being referred to.
                        type: string
                      kind:
                        description: Kind of the object being referred to.
                        type: string
                      name:
                        description: Name of the object being referred to.
                        type: string
                    required:
                    - name
                    type: object
                type: object
              clusterDomain:
                type: string
              etcd:
                description: Etcd configures the etcd cluster that this shard should
                  be using.
                properties:
                  endpoints:
                    description: Endpoints is a list of http urls at which etcd nodes
                      are available. The expected format is "https://etcd-hostname:2379".
                    items:
                      type: string
                    type: array
                  tlsConfig:
                    description: ClientCert configures the client certificate used
                      to access etcd.
                    properties:
                      secretRef:
                        description: SecretRef is the reference to a v1.Secret object
                          that contains the TLS certificate.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - secretRef
                    type: object
                required:
                - endpoints
                type: object
              external:
                properties:
                  hostname:
                    description: |-
                      Hostname is the external name of the kcp instance. This should be matched by a DNS
                      record pointing to the kcp-front-proxy Service's external IP address.
                    type: string
                  port:
                    format: int32
                    type: integer
                required:
                - hostname
                - port
                type: object
              image:
                description: ImageSpec defines settings for using a specific image
                  and overwriting the default images used.
                properties:
                  imagePullSecrets:
                    description: 'Optional: ImagePullSecrets is a list of secret references
                      that should be used as image pull secrets (e.g. when a private
                      registry is used).'
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  repository:
                    description: Repository is the container image repository to use
                      for KCP containers. Defaults to `ghcr.io/kcp-dev/kcp`.
                    type: string
                  tag:
                    description: Tag is the container image tag to use for KCP containers.
                      Defaults to the latest kcp release that the operator supports.
                    type: string
                type: object
              replicas:
                description: Replicas configures how many instances of this shard
                  run in parallel. Defaults to 2 if not set.
                format: int32
                type: integer
              serviceTemplate:
                description: 'Optional: ServiceTemplate configures the Kubernetes
                  Service created for this shard.'
                properties:
                  metadata:
                    description: |-
                      ServiceMetadataTemplate defines the default labels and annotations
                      to be copied to the Kubernetes Service resource.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is a key value map to be copied to
                          the target Kubernetes Service.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is a key value map to be copied to the
                          target Kubernetes Service.
                        type: object
                    type: object
                  spec:
                    properties:
                      type:
                        description: Service Type string describes ingress methods
                          for a service
                        type: string
                    type: object
                type: object
            required:
            - cache
            - certificates
            - etcd
            - external
            type: object
          status:
            description: RootShardStatus defines the observed state of RootShard
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
