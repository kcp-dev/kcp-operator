/*
Copyright 2024 The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CommonShardSpecApplyConfiguration represents a declarative configuration of the CommonShardSpec type for use
// with apply.
type CommonShardSpecApplyConfiguration struct {
	ClusterDomain *string                              `json:"clusterDomain,omitempty"`
	Etcd          *EtcdConfigApplyConfiguration        `json:"etcd,omitempty"`
	Image         *ImageSpecApplyConfiguration         `json:"image,omitempty"`
	Replicas      *int32                               `json:"replicas,omitempty"`
	Audit         *AuditSpecApplyConfiguration         `json:"audit,omitempty"`
	Authorization *AuthorizationSpecApplyConfiguration `json:"authorization,omitempty"`
}

// CommonShardSpecApplyConfiguration constructs a declarative configuration of the CommonShardSpec type for use with
// apply.
func CommonShardSpec() *CommonShardSpecApplyConfiguration {
	return &CommonShardSpecApplyConfiguration{}
}

// WithClusterDomain sets the ClusterDomain field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterDomain field is set to the value of the last call.
func (b *CommonShardSpecApplyConfiguration) WithClusterDomain(value string) *CommonShardSpecApplyConfiguration {
	b.ClusterDomain = &value
	return b
}

// WithEtcd sets the Etcd field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Etcd field is set to the value of the last call.
func (b *CommonShardSpecApplyConfiguration) WithEtcd(value *EtcdConfigApplyConfiguration) *CommonShardSpecApplyConfiguration {
	b.Etcd = value
	return b
}

// WithImage sets the Image field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Image field is set to the value of the last call.
func (b *CommonShardSpecApplyConfiguration) WithImage(value *ImageSpecApplyConfiguration) *CommonShardSpecApplyConfiguration {
	b.Image = value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *CommonShardSpecApplyConfiguration) WithReplicas(value int32) *CommonShardSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithAudit sets the Audit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Audit field is set to the value of the last call.
func (b *CommonShardSpecApplyConfiguration) WithAudit(value *AuditSpecApplyConfiguration) *CommonShardSpecApplyConfiguration {
	b.Audit = value
	return b
}

// WithAuthorization sets the Authorization field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Authorization field is set to the value of the last call.
func (b *CommonShardSpecApplyConfiguration) WithAuthorization(value *AuthorizationSpecApplyConfiguration) *CommonShardSpecApplyConfiguration {
	b.Authorization = value
	return b
}
